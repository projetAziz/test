{"version":3,"file":"static/js/256.030553ee.chunk.js","mappings":"kyBAAA,iBACA,cAEA,WAkBA,SAAgBA,EAAhB,GAQC,IAPCC,EAOD,EAPCA,UACAC,EAMD,EANCA,KACAC,EAKD,EALCA,QAMA,GAAIC,EAAAA,UAAUH,GACZ,MAAM,IAAII,MAAM,+BACX,GAAID,EAAAA,UAAUF,GACnB,MAAM,IAAIG,MAAM,0BACX,GAAID,EAAAA,UAAUD,GACnB,MAAM,IAAIE,MAAM,6BAGlB,GACO,6BADCF,EACN,CACE,GAAoB,kBAATD,EACT,MAAM,IAAIG,MAAM,0CAGlB,IAGIC,EAHEC,EAAmBC,EAAKC,IAAIC,UAIlC,IACEJ,EAAmBK,EAASC,aAAaX,GACzC,MAAOY,GACP,MAAM,IAAIR,MAAM,kBAGlB,IAAMS,EAAsBH,EAASI,WAAWb,GAC1Cc,EAAQR,EAAKS,YAAYT,EAAKC,IAAIS,aAGlCC,EAAmBX,EAAKC,IAC5BK,EACAE,EACAV,EACAC,EAAiBa,WAWnB,MAPe,CACbjB,QAAS,2BACTa,MAAOL,EAASU,aAAaL,GAC7BM,eAAgBX,EAASU,aAAad,EAAiBN,WACvDsB,WAAYZ,EAASU,aAAaF,IAOpC,MAAM,IAAId,MAAM,yCA2EtB,SAAgBmB,EAAhB,GAMC,IALCC,EAKD,EALCA,cACAC,EAID,EAJCA,WAKA,GAAItB,EAAAA,UAAUqB,GACZ,MAAM,IAAIpB,MAAM,mCACX,GAAID,EAAAA,UAAUsB,GACnB,MAAM,IAAIrB,MAAM,gCAGlB,GACO,6BADCoB,EAActB,QACpB,CAEE,IAqBIwB,EArBEC,EAA+BC,EAAeH,GAC9CI,EAA+BtB,EAAKC,IAAIC,QAAQqB,cACpDH,GACAR,UAGIJ,EAAQL,EAASC,aAAaa,EAAcT,OAC5CO,EAAaZ,EAASC,aAAaa,EAAcF,YACjDD,EAAiBX,EAASC,aAC9Ba,EAAcH,gBAIVU,EAAmBxB,EAAKC,IAAIwB,KAChCV,EACAP,EACAM,EACAQ,GAKF,IACEH,EAAShB,EAASuB,WAAWF,GAC7B,MAAOnB,GACP,MAAM,IAAIR,MAAM,sBAGlB,GAAIsB,EACF,OAAOA,EAET,MAAM,IAAItB,MAAM,sBAIhB,MAAM,IAAIA,MAAM,0CAgDtB,SAASwB,EAAeM,GACtB,IAAMC,EAAYC,EAAOC,KAAKH,EAAQ,OAAOI,SAAS,UACtD,OAAO5B,EAASC,aAAawB,GAxO/BI,EAAAA,QAAAA,EAwEAA,EAAAA,cAAA,YAQC,IAPCvC,EAOD,EAPCA,UACAC,EAMD,EANCA,KACAC,EAKD,EALCA,QAMA,GAAIC,EAAAA,UAAUH,GACZ,MAAM,IAAII,MAAM,+BACX,GAAID,EAAAA,UAAUF,GACnB,MAAM,IAAIG,MAAM,0BACX,GAAID,EAAAA,UAAUD,GACnB,MAAM,IAAIE,MAAM,6BAGlB,IAAMoC,EAAyB,KAAH,IAAG,EAAK,IAGpC,GAAoB,kBAATvC,GAAqB,WAAYA,EAG1C,MAAM,IAAIG,MACR,uEAKJ,IAAMqC,EAAkB,CACtBxC,KAAAA,EACAyC,QAAS,IAQLC,EAJaP,EAAOQ,WACxBC,KAAKC,UAAUL,GACf,SAE0BD,EACxBO,EAAY,EAQhB,OANIJ,EAAS,IACXI,EAAYP,EAAyBG,EAzBd,IA2BzBF,EAAgBC,QAAU,IAAIM,OAAOD,GAG9BhD,EAAQ,CAAEC,UAAAA,EAAWC,KADN4C,KAAKC,UAAUL,GACYvC,QAAAA,KAWnDqC,EAAAA,QAAAA,EA+DAA,EAAAA,cAAA,YAMC,IALCf,EAKD,EALCA,cACAC,EAID,EAJCA,WAKA,GAAItB,EAAAA,UAAUqB,GACZ,MAAM,IAAIpB,MAAM,mCACX,GAAID,EAAAA,UAAUsB,GACnB,MAAM,IAAIrB,MAAM,gCAIlB,OADwByC,KAAKI,MAAM1B,EAAQ,CAAEC,cAAAA,EAAeC,WAAAA,KACrCxB,MASzBsC,EAAAA,uBAAA,SAAuCd,GACrC,IAAMyB,EAAuBtB,EAAeH,GACtC0B,EACJ5C,EAAKC,IAAIC,QAAQqB,cAAcoB,GAAsBlD,UACvD,OAAOU,EAASU,aAAa+B,K,2bClP/BC,EAAAA,EAAAA,OAAAA,GACAA,EAAAA,EAAAA,MAAAA,GACAA,EAAAA,EAAAA,OAAAA,GACA,eAASC,OAAAA,eAAAA,EAAAA,YAAAA,CAAAC,YAAAA,EAAAC,IAAAA,WAAA,SAAAC,aAAWH,OAAAA,eAAAA,EAAAA,YAAAA,CAAAC,YAAAA,EAAAC,IAAAA,WAAA,SAAAE,c,wJCHpB,eAQA,WAmGA,SAASC,EAAgBC,EAAkBC,GACzC,IAAMC,EAAcC,EAAAA,oBAAoB3D,EAAAA,eAAewD,IACvD,OAAOxD,EAAAA,iBAAiB0D,EAAaD,GAnFvCrB,EAAAA,aAAA,YAMC,IALCd,EAKD,EALCA,WACAxB,EAID,EAJCA,KAKA,GAAIE,EAAAA,UAAUF,GACZ,MAAM,IAAIG,MAAM,0BACX,GAAID,EAAAA,UAAUsB,GACnB,MAAM,IAAIrB,MAAM,gCAGlB,IAAMuD,EAAUxD,EAAAA,eAAeF,GACzB8D,EAAUD,EAAAA,oBAAoBH,GAC9BK,EAAMF,EAAAA,OAAOC,EAAStC,GAE5B,OADmBtB,EAAAA,UAAU2D,EAAAA,SAASE,EAAIC,GAAID,EAAIE,EAAGF,EAAIG,IAa3D5B,EAAAA,yBAAA,YAMC,IALCtC,EAKD,EALCA,KACA2D,EAID,EAJCA,UAKA,GAAIzD,EAAAA,UAAUF,GACZ,MAAM,IAAIG,MAAM,0BACX,GAAID,EAAAA,UAAUyD,GACnB,MAAM,IAAIxD,MAAM,+BAGlB,IAAMJ,EAAY0D,EAAgBzD,EAAM2D,GAClCQ,EAASN,EAAAA,gBAAgB9D,GAE/B,OADkB8D,EAAAA,YAAYM,IAahC7B,EAAAA,iBAAA,YAMC,IALCtC,EAKD,EALCA,KACA2D,EAID,EAJCA,UAKA,GAAIzD,EAAAA,UAAUF,GACZ,MAAM,IAAIG,MAAM,0BACX,GAAID,EAAAA,UAAUyD,GACnB,MAAM,IAAIxD,MAAM,+BAGlB,IAAMJ,EAAY0D,EAAgBzD,EAAM2D,GACxC,kBAAY5D,EAAUsC,SAAS,U,mSCjGjC,IA6CY+B,EA7CZ,WAOA,WAEA,WAiHA,SAASC,EACPpE,EACAqE,GAEA,IAAKlB,OAAOmB,KAAKH,GAAsBI,SAASvE,GAC9C,MAAM,IAAIE,MAAJ,4BAA+BF,EAA/B,MACD,GAAIqE,IAAoBA,EAAgBE,SAASvE,GACtD,MAAM,IAAIE,MAAJ,6CACkCF,EADlC,oCACqEqE,EAAgBG,KACvF,QAgBR,SAASC,EACPC,EACAC,EACAC,EACAC,EACA7E,GAIA,GAFAoE,EAAgBpE,EAAS,CAACmE,EAAqBW,GAAIX,EAAqBY,UAEpDC,IAAhBN,EAAME,GACR,MAAO,CACL,UACA5E,IAAYmE,EAAqBY,IAAe,MAATF,EACnC,qEACAjB,EAAAA,OAAOqB,EAAWL,EAAMC,EAAOH,EAAO1E,KAI9C,QAAcgF,IAAVH,EACF,MAAM,IAAI3E,MAAJ,kCAAqCyE,EAArC,oBAAqDC,IAG7D,GAAa,UAATA,EACF,MAAO,CAAC,UAAWhB,EAAAA,OAAOiB,IAG5B,GAAa,WAATD,EAKF,MAHqB,kBAAVC,IACTA,EAAQ3C,EAAOC,KAAK0C,EAAO,SAEtB,CAAC,UAAWjB,EAAAA,OAAOiB,IAG5B,GAAID,EAAKM,YAAY,OAASN,EAAKO,OAAS,EAAG,CAC7C,GAAInF,IAAYmE,EAAqBW,GACnC,MAAM,IAAI5E,MACR,4DAGJ,IAAMkF,EAAaR,EAAKS,MAAM,EAAGT,EAAKM,YAAY,MAC5CI,EAAiBT,EAAMU,KAAI,SAACC,GAAD,OAC/Bf,EAAYC,EAAOC,EAAMS,EAAYI,EAAMxF,MAE7C,MAAO,CACL,UACA4D,EAAAA,OACE6B,EAAAA,UACEH,EAAeC,KAAI,gCACnBD,EAAeC,KAAI,mCAM3B,MAAO,CAACX,EAAMC,GAYhB,SAASI,EACPS,EACA3F,EACA2E,EACA1E,GAEAoE,EAAgBpE,EAAS,CAACmE,EAAqBW,GAAIX,EAAqBY,KAExE,IAJ0D,EAIpDY,EAAe,CAAC,WAChBC,EAA2B,CAACC,EAASH,EAAahB,IALE,IAOtCA,EAAMgB,IAPgC,IAO1D,2BAAwC,KAA7BI,EAA6B,QACtC,GAAI9F,IAAYmE,EAAqBW,SAA2BE,IAArBjF,EAAK+F,EAAMnB,MAAtD,CAGA,MAAsBF,EACpBC,EACAoB,EAAMnB,KACNmB,EAAMlB,KACN7E,EAAK+F,EAAMnB,MACX3E,GALF,SAAO4E,EAAP,KAAaC,EAAb,KAOAc,EAAaI,KAAKnB,GAClBgB,EAAcG,KAAKlB,KAnBqC,8BAsB1D,OAAOY,EAAAA,UAAUE,EAAcC,GAUjC,SAASI,EACPN,EACAhB,GAEA,IAAIuB,EAAS,GACPC,EAAeC,EAAqBT,EAAahB,GACvDwB,EAAaE,OAAOV,GAEpB,IAN4C,EAMtCW,EAAO,CAACX,GAAJ,SAAoBY,MAAMnE,KAAK+D,GAAcK,SANX,IAOzBF,GAPyB,IAO5C,2BAAyB,KAAdzB,EAAc,QAEvB,IADiBF,EAAME,GAErB,MAAM,IAAI1E,MAAJ,wCAA2C0E,IAGnDqB,GAAU,GAAJ,OAAOrB,EAAP,YAAeF,EAAME,GACxBW,KAAI,gBAAGZ,EAAH,EAAGA,KAAY6B,EAAf,EAAS5B,KAAT,gBAA0B4B,EAA1B,YAA+B7B,MACnCH,KAAK,KAFF,MAboC,8BAkB5C,OAAOyB,EAWT,SAASE,EACPT,EACAhB,GACgC,IAAhC+B,EAAgC,uDAAT,IAAIC,IAAK,EAEhBhB,EAAYiB,MAAM,kBAFF,SAGhC,GADCjB,EAF+B,KAG5Be,EAAQG,IAAIlB,SAAuCV,IAAvBN,EAAMgB,GACpC,OAAOe,EAGTA,EAAQI,IAAInB,GAPoB,UASZhB,EAAMgB,IATM,IAShC,2BAAwC,KAA7BI,EAA6B,QACtCK,EAAqBL,EAAMlB,KAAMF,EAAO+B,IAVV,8BAYhC,OAAOA,EAYT,SAASK,EACPpB,EACA3F,EACA2E,EACA1E,GAIA,OAFAoE,EAAgBpE,EAAS,CAACmE,EAAqBW,GAAIX,EAAqBY,KAEjEnB,EAAAA,OAAOqB,EAAWS,EAAa3F,EAAM2E,EAAO1E,IAUrD,SAAS6F,EACPH,EACAhB,GAEA,OAAOd,EAAAA,OAAOoC,EAAWN,EAAahB,IASxC,SAASqC,EACPhH,GAEA,IAAMiH,EAA0C,GAChD,IAAK,IAAMC,KAAO5E,EAAAA,qBAAqB6E,WACjCnH,EAAKkH,KACPD,EAAcC,GAAOlH,EAAKkH,IAO9B,MAHI,UAAWD,IACbA,EAActC,MAAKvB,OAAAA,OAAAA,CAAKgE,aAAc,IAAOH,EAActC,QAEtDsC,EAkFT,SAASI,EAAoBC,GAC3B,IAAMC,EAAQ,IAAIpH,MAAM,yCACxB,GACuB,kBAAdmH,KACL,WAAYA,KACbA,EAAUlC,OAEX,MAAMmC,EAGR,IAAMvH,EAAOsH,EAAU9B,KAAI,SAAUgC,GACnC,MAAe,UAAXA,EAAE3C,KACG2C,EAAE1C,MAGJ5E,EAAAA,eAAesH,EAAE1C,UAEpBH,EAAQ2C,EAAU9B,KAAI,SAAUgC,GACpC,OAAOA,EAAE3C,QAEL4C,EAASH,EAAU9B,KAAI,SAAUgC,GACrC,IAAKA,EAAE5C,KACL,MAAM2C,EAER,gBAAUC,EAAE3C,KAAZ,YAAoB2C,EAAE5C,SAGxB,OAAOc,EAAAA,aACL,CAAC,UAAW,WACZ,CACEA,EAAAA,aAAa,IAAIa,MAAMe,EAAUlC,QAAQsC,KAAK,UAAWD,GACzD/B,EAAAA,aAAaf,EAAO3E,MApa1B,SAAYoE,GACVA,EAAAA,GAAAA,KACAA,EAAAA,GAAAA,KACAA,EAAAA,GAAAA,KAHF,CAAYA,EAAA9B,EAAAA,uBAAAA,EAAAA,qBAAoB,KA8CnBA,EAAAA,qBAAuB,CAClCuC,KAAM,SACNsC,WAAY,CACVxC,MAAO,CACLE,KAAM,SACN8C,qBAAsB,CACpB9C,KAAM,QACN+C,MAAO,CACL/C,KAAM,SACNsC,WAAY,CACVvC,KAAM,CAAEC,KAAM,UACdA,KAAM,CAAEA,KAAM,WAEhBgD,SAAU,CAAC,OAAQ,WAIzBlC,YAAa,CAAEd,KAAM,UACrBiD,OAAQ,CAAEjD,KAAM,UAChBnB,QAAS,CAAEmB,KAAM,WAEnBgD,SAAU,CAAC,QAAS,cAAe,SAAU,YAiSlCvF,EAAAA,eAAiB,CAC5B4C,WAAAA,EACAe,WAAAA,EACAG,qBAAAA,EACAW,WAAAA,EACAjB,SAAAA,EACAkB,aAAAA,EACAe,WAzCF,SACET,EACArH,GAEAoE,EAAgBpE,EAAS,CAACmE,EAAqBW,GAAIX,EAAqBY,KAExE,IAAMiC,EAAgBD,EAAaM,GAC7BU,EAAQ,CAAC7F,EAAOC,KAAK,OAAQ,QAqBnC,OApBA4F,EAAMhC,KACJe,EACE,eACAE,EAAca,OACdb,EAActC,MACd1E,IAI8B,iBAA9BgH,EAActB,aAChBqC,EAAMhC,KACJe,EAEEE,EAActB,YACdsB,EAAcvD,QACduD,EAActC,MACd1E,IAIC4D,EAAAA,OAAO1B,EAAO8F,OAAOD,MAyB9B1F,EAAAA,mBAAA,SAAmCgF,GACjC,IAAMY,EAAab,EAAoBC,GACvC,OAAOzD,EAAAA,YAAYqE,IAmErB5F,EAAAA,cAAA,YAWC,IAPCd,EAOD,EAPCA,WACAxB,EAMD,EANCA,KACAC,EAKD,EALCA,QAOA,GADAoE,EAAgBpE,GACZC,EAAAA,UAAUF,GACZ,MAAM,IAAIG,MAAM,0BACX,GAAID,EAAAA,UAAUsB,GACnB,MAAM,IAAIrB,MAAM,iCAGlB,IAAMyD,EACJ3D,IAAYmE,EAAqB+D,GAC7Bd,EAAoBrH,GACpBsC,EAAAA,eAAeyF,WACb/H,EACAC,GAEF8D,EAAMF,EAAAA,OAAOD,EAAapC,GAChC,OAAOtB,EAAAA,UAAU2D,EAAAA,SAASE,EAAIC,GAAID,EAAIE,EAAGF,EAAIG,IAc/C5B,EAAAA,sBAAA,YAWC,IAPCtC,EAOD,EAPCA,KACA2D,EAMD,EANCA,UACA1D,EAKD,EALCA,QAOA,GADAoE,EAAgBpE,GACZC,EAAAA,UAAUF,GACZ,MAAM,IAAIG,MAAM,0BACX,GAAID,EAAAA,UAAUyD,GACnB,MAAM,IAAIxD,MAAM,+BAGlB,IAAMyD,EACJ3D,IAAYmE,EAAqB+D,GAC7Bd,EAAoBrH,GACpBsC,EAAAA,eAAeyF,WACb/H,EACAC,GAEFF,EAAYG,EAAAA,iBAAiB0D,EAAaD,GAC1CQ,EAASN,EAAAA,gBAAgB9D,GAC/B,OAAO8D,EAAAA,YAAYM,K,yMC9iBrB,eAUA,WAeA,SAAgBiE,EAAcC,EAAmBC,GAC/C,GAAkB,KAAdD,IAAqB,eAAgBE,KAAKF,GAC5C,MAAM,IAAIlI,MAAJ,uDAC4CkI,IAIpD,GAAIC,EAAe,EACjB,MAAM,IAAInI,MAAJ,mEACwDmI,IAIhE,OAAOE,OAAOC,UAAUC,SAASC,KAAKN,EAAWC,EAAc,KAbjEhG,EAAAA,cAAAA,EAsBAA,EAAAA,UAAA,SAA0BwC,GACxB,OAAiB,OAAVA,QAA4BG,IAAVH,GAU3BxC,EAAAA,eAAA,SAA+BwC,GAC7B,MAAwB,kBAAVA,GAAuB8D,EAAAA,YAAY9D,GAE7CjB,EAAAA,SAASiB,GADT3C,EAAOC,KAAK0C,IAYlBxC,EAAAA,UAAA,SAA0B0B,EAAWC,EAAWC,GAC9C,IAAM2E,EAAOhF,EAAAA,WAAWI,GAClB6E,EAAOjF,EAAAA,WAAWK,GAClB6E,EAAOlF,EAAAA,YAAYG,GACnBgF,EAAOZ,EAAcvE,EAAAA,WAAWgF,GAAMxG,SAAS,OAAQ,IACvD4G,EAAOb,EAAcvE,EAAAA,WAAWiF,GAAMzG,SAAS,OAAQ,IACvD6G,EAAON,EAAAA,eAAeA,EAAAA,SAASG,IACrC,OAAOlF,EAAAA,aAAamF,EAAKf,OAAOgB,EAAMC,KAUxC5G,EAAAA,iBAAA,SACEsB,EACAD,GAEA,IAAMwF,EAAYtF,EAAAA,WAAWF,GAC7B,OAAOE,EAAAA,UAAUD,EAAauF,EAAUnF,EAAGmF,EAAUlF,EAAGkF,EAAUjF,IASpE5B,EAAAA,UAAA,SAA0B8G,GACxB,GAAKA,EAAL,CAIA,GAAqB,kBAAVA,EAAoB,CAC7B,IAAMC,EAASxF,EAAAA,SAASuF,GACxBA,EAAQvF,EAAAA,YAAYwF,GAGtB,GAAqB,kBAAVD,EAAoB,CAC7B,IAAIE,EAAM,iEAEV,MADAA,GAAO,aAAJ,cAAwBF,EAAxB,aAAkCA,GAC/B,IAAIjJ,MAAMmJ,GAGlB,OAAOzF,EAAAA,aAAauF,EAAMG,kB,wXCvH5B,IAAMC,EAASC,EAAQ,OACjBC,EAAYD,EAAQ,OACpBE,EAAYF,EAAQ,OAC1B,WACA,WACA,WAKanH,EAAAA,YAAc,WACzB,IACMsH,EAAOC,EAAAA,MADS,IAEtB,OAAOA,EAAAA,YAAYD,IAMRtH,EAAAA,eAAiB,SAASwH,GACrC,MAAO,sBAAsBvB,KAAKuB,IAMvBxH,EAAAA,cAAgB,SAASwH,GAEpC,OADiBxH,EAAAA,gBACGuH,EAAAA,aAAaC,IAatBxH,EAAAA,kBAAoB,SAASwH,EAAiBC,GACzDD,EAAUJ,EAAUM,eAAeF,GAASP,cAO5C,IALA,IAAMU,OAA4BhF,IAAnB8E,EAA+BA,EAAe1H,WAAa,KAAO,GAE3E6H,EAAOC,EAAAA,OAAOF,EAASH,GAASzH,SAAS,OAC3C+H,EAAM,KAEDC,EAAI,EAAGA,EAAIP,EAAQ1E,OAAQiF,IAC9BC,SAASJ,EAAKG,GAAI,KAAO,EAC3BD,GAAON,EAAQO,GAAGE,cAElBH,GAAON,EAAQO,GAInB,OAAOD,GAQI9H,EAAAA,uBAAyB,SAASwH,EAAiBC,GAC9D,OAAOzH,EAAAA,eAAewH,IAAYxH,EAAAA,kBAAkBwH,EAASC,KAAoBD,GAQtExH,EAAAA,gBAAkB,SAASF,EAActB,GACpDsB,EAAOyH,EAAAA,SAASzH,GAChB,IAAMoI,EAAU,IAAIC,EAAG3J,GAEvB,OAAI0J,EAAQE,SAGHP,EAAAA,QAAQ,CAAC/H,EAAM,OAAOkD,OAAO,IAI/B6E,EAAAA,QAAQ,CAAC/H,EAAMD,EAAOC,KAAKoI,EAAQG,aAAarF,OAAO,KASnDhD,EAAAA,iBAAmB,SAC9BF,EACAwI,EACAC,GAEA,IAAMC,EAAUjB,EAAAA,SAASzH,GACnB2I,EAAUlB,EAAAA,SAASe,GACnBI,EAAcnB,EAAAA,SAASgB,GAS7B,OAPArB,EAA0B,KAAnBsB,EAAQ1F,QACfoE,EAA0B,KAAnBuB,EAAQ3F,QAEC+E,EAAAA,UACdhI,EAAO8F,OAAO,CAAC9F,EAAOC,KAAK,KAAM,OAAQ0I,EAASC,EAASZ,EAAAA,UAAUa,MAGxD1F,OAAO,KAMXhD,EAAAA,cAAgB,SAASwH,GACpC,IAAMmB,EAAIpB,EAAAA,MAAMC,GAChB,OAAoB,IAAbmB,EAAE7F,QAAgB6F,EAAE,IAAM,GAAKA,EAAE,IAAM,GAMnC3I,EAAAA,eAAiB,SAASd,GACrC,OAAOmI,EAAUuB,iBAAiB1J,IASvBc,EAAAA,cAAgB,SAASvC,EAAmBoL,GACvD,YADuD,QAAAA,GAAAA,GAC9B,KAArBpL,EAAUqF,OAELuE,EAAUyB,gBAAgBjJ,EAAO8F,OAAO,CAAC9F,EAAOC,KAAK,CAAC,IAAKrC,OAG/DoL,GAIExB,EAAUyB,gBAAgBrL,IAStBuC,EAAAA,aAAe,SAAS+I,EAAgBF,GAOnD,YAPmD,QAAAA,GAAAA,GACnDE,EAASxB,EAAAA,SAASwB,GACdF,GAA8B,KAAlBE,EAAOjG,SACrBiG,EAAS1B,EAAU2B,iBAAiBD,GAAQ,GAAO/F,MAAM,IAE3DkE,EAAyB,KAAlB6B,EAAOjG,QAEP+E,EAAAA,OAAOkB,GAAQ/F,OAAO,KAElBhD,EAAAA,gBAAkBA,EAAAA,aAMlBA,EAAAA,iBAAmB,SAASd,GACvC,OAAOc,EAAAA,gBAAgBA,EAAAA,gBAAgBd,KAO5Bc,EAAAA,gBAAkB,SAASd,GAGtC,OAFAA,EAAaqI,EAAAA,SAASrI,GAEfmI,EAAU4B,gBAAgB/J,GAAY,GAAO8D,MAAM,IAM/ChD,EAAAA,aAAe,SAASvC,GAKnC,OAHyB,MADzBA,EAAY8J,EAAAA,SAAS9J,IACPqF,SACZrF,EAAY4J,EAAU2B,iBAAiBvL,GAAW,GAAOuF,MAAM,IAE1DvF,I,sRC9LT,IAAM2J,EAAYD,EAAQ,OAC1B,WAManH,EAAAA,MAAQ,SAASkJ,GAC5B,OAAOrJ,EAAOsJ,YAAYD,GAAO9D,KAAK,IAW3BpF,EAAAA,cAAgB,SAASgH,EAAUlE,EAAgBsG,QAAA,QAAAA,GAAAA,GAC9D,IAAMC,EAAMrJ,EAAAA,MAAM8C,GAElB,OADAkE,EAAMhH,EAAAA,SAASgH,GACXoC,EACEpC,EAAIlE,OAASA,GACfkE,EAAIsC,KAAKD,GACFA,GAEFrC,EAAIhE,MAAM,EAAGF,GAEhBkE,EAAIlE,OAASA,GACfkE,EAAIsC,KAAKD,EAAKvG,EAASkE,EAAIlE,QACpBuG,GAEFrC,EAAIhE,OAAOF,IAGT9C,EAAAA,UAAYA,EAAAA,cASZA,EAAAA,eAAiB,SAASgH,EAAUlE,GAC/C,OAAO9C,EAAAA,UAAUgH,EAAKlE,GAAQ,IAQnB9C,EAAAA,MAAQ,SAAS2I,GAG5B,IADA,IAAIY,GADJZ,EAAIvB,EAAUM,eAAeiB,IACf,GACPA,EAAE7F,OAAS,GAA0B,MAArByG,EAAMxJ,YAE3BwJ,GADAZ,EAAIA,EAAE3F,MAAM,IACF,GAEZ,OAAO2F,GAEI3I,EAAAA,WAAaA,EAAAA,MAMbA,EAAAA,SAAW,SAAS0B,GAC/B,IAAK7B,EAAO2J,SAAS9H,GACnB,GAAIuC,MAAMwF,QAAQ/H,GAChBA,EAAI7B,EAAOC,KAAK4B,QACX,GAAiB,kBAANA,EAAgB,CAChC,IAAI0F,EAAUsC,YAAYhI,GAGxB,MAAM,IAAI7D,MACR,8GAA8G6D,GAHhHA,EAAI7B,EAAOC,KAAKsH,EAAUuC,UAAUvC,EAAUM,eAAehG,IAAK,YAM/D,GAAiB,kBAANA,EAChBA,EAAI0F,EAAUwC,YAAYlI,QACrB,GAAU,OAANA,QAAoBiB,IAANjB,EACvBA,EAAI7B,EAAOsJ,YAAY,QAClB,GAAIhB,EAAG0B,KAAKnI,GACjBA,EAAIA,EAAEoI,YAAYjK,OACb,KAAI6B,EAAE2G,QAIX,MAAM,IAAIxK,MAAM,gBAFhB6D,EAAI7B,EAAOC,KAAK4B,EAAE2G,WAKtB,OAAO3G,GAQI1B,EAAAA,YAAc,SAASqJ,GAClC,OAAO,IAAIlB,EAAGnI,EAAAA,SAASqJ,IAAMU,YAOlB/J,EAAAA,YAAc,SAASqJ,GAElC,MAAO,MADPA,EAAMrJ,EAAAA,SAASqJ,IACGtJ,SAAS,QAOhBC,EAAAA,WAAa,SAASgK,GACjC,OAAO,IAAI7B,EAAG6B,GAAKC,SAAS,MAOjBjK,EAAAA,WAAa,SAASgK,GACjC,OAAOnK,EAAOC,KAAKkK,EAAIE,OAAO,KAAK7B,YAMxBrI,EAAAA,aAAe,SAASmK,GACnC,MAAmB,kBAARA,GAIJ/C,EAAUgD,cAAcD,GAHtBA,EAGmC,KAAOA,GAQxCnK,EAAAA,SAAW,SAASqK,GAC/B,GAAIxK,EAAO2J,SAASa,GAClB,MAAO,KAAKA,EAAGtK,SAAS,OACnB,GAAIsK,aAAcpG,MAAO,CAE9B,IADA,IAAMqG,EAAQ,GACLvC,EAAI,EAAGA,EAAIsC,EAAGvH,OAAQiF,IAC7BuC,EAAM5G,KAAK1D,EAAAA,SAASqK,EAAGtC,KAEzB,OAAOuC,K,+PC3JX,eAKatK,EAAAA,YAAkB,IAAImI,EACjC,mEACA,IAMWnI,EAAAA,WAAiB,IAAImI,EAChC,oEACA,IAMWnI,EAAAA,iBACX,mEAKWA,EAAAA,eAAyBH,EAAOC,KAAKE,EAAAA,iBAAkB,OAKvDA,EAAAA,sBACX,mEAKWA,EAAAA,oBAA8BH,EAAOC,KAAKE,EAAAA,sBAAuB,OAKjEA,EAAAA,gBACX,mEAKWA,EAAAA,cAAwBH,EAAOC,KAAKE,EAAAA,gBAAiB,Q,qKCjD5D,MAAuDmH,EAAQ,MAA7DoD,EAAS,YAAEC,EAAS,YAAaC,EAAI,YAAEC,EAAS,YAClDC,EAAaxD,EAAQ,OACrBC,EAAYD,EAAQ,OAC1B,WACA,WAQanH,EAAAA,OAAS,SAAS2I,EAAQiC,GASrC,YATqC,QAAAA,EAAAA,KAInCjC,EAHe,kBAANA,GAAmBvB,EAAUsC,YAAYf,GAG9CpB,EAAAA,SAASoB,GAFT9I,EAAOC,KAAK6I,EAAG,QAKhBiC,IAAMA,EAAO,KAEVA,GACN,KAAK,IACH,OAAOL,EAAU5B,GAEnB,KAAK,IACH,OAAO8B,EAAK9B,GAEd,KAAK,IACH,OAAO6B,EAAU7B,GAEnB,KAAK,IACH,OAAO+B,EAAU/B,GAEnB,QACE,MAAM,IAAI9K,MAAM,2BAA2B+M,KASpC5K,EAAAA,UAAY,SAAS2I,GAChC,OAAO3I,EAAAA,OAAO2I,IAOH3I,EAAAA,OAAS,SAAS2I,GAE7B,OADAA,EAAIpB,EAAAA,SAASoB,GACNgC,EAAW,UACfE,OAAOlC,GACPmC,UAQQ9K,EAAAA,UAAY,SAAS2I,EAAQoC,GACxCpC,EAAIpB,EAAAA,SAASoB,GACb,IAAMf,EAAO+C,EAAW,UACrBE,OAAOlC,GACPmC,SACH,OAAe,IAAXC,EACKxD,EAAAA,UAAUK,EAAM,IAEhBA,GAQE5H,EAAAA,QAAU,SAAS2I,GAC9B,OAAO3I,EAAAA,OAAOgL,EAAIC,OAAOtC,M,qaCjF3B,IAAMtB,EAAYF,EAAQ,OAmBjBnH,EAAAA,UAAAA,EAlBT,IAAMoH,EAAYD,EAAQ,OAC1B,WAOSnH,EAAAA,GAAAA,EANT,eAWSA,EAAAA,IAAAA,EAVTc,OAAOoK,OAAOlL,EAASoH,GAoBvBvG,EAAAA,EAAAA,MAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,I,oICjDA,IAAMqG,EAASC,EAAQ,OACjBC,EAAYD,EAAQ,OAC1B,WACA,WAaanH,EAAAA,iBAAmB,SAASmL,EAAWC,EAAa1N,GAwE/D,GAvEAyN,EAAKE,IAAM,GACXF,EAAKG,QAAU,GAGfH,EAAKI,OAAS,SAASC,GACrB,QADqB,QAAAA,GAAAA,GACjBA,EAAO,CAET,IAAMC,EAAY,GAIlB,OAHAN,EAAKG,QAAQI,SAAQ,SAACjI,GACpBgI,EAAIhI,GAAS,KAAK0H,EAAK1H,GAAO1D,SAAS,UAElC0L,EAET,OAAOlE,EAAAA,SAAS4D,EAAKE,MAGvBF,EAAKQ,UAAY,WACf,OAAOX,EAAIC,OAAOE,EAAKE,MAGzBD,EAAOM,SAAQ,SAACjI,EAAYsE,GAE1B,SAAS6D,IACP,OAAOT,EAAKE,IAAItD,GAElB,SAAS8D,EAAOnK,GAGY,QAF1BA,EAAI6F,EAAAA,SAAS7F,IAEP3B,SAAS,QAAoB0D,EAAMqI,YACvCpK,EAAI7B,EAAOsJ,YAAY,IAGrB1F,EAAMsI,WAAatI,EAAMX,QAC3BpB,EAAI6F,EAAAA,WAAW7F,GACfwF,EACEzD,EAAMX,QAAUpB,EAAEoB,OAClB,aAAaW,EAAMnB,KAAI,uBAAuBmB,EAAMX,OAAM,WAEjDW,EAAMqI,WAA0B,IAAbpK,EAAEoB,SAAiBW,EAAMX,QACvDoE,EACEzD,EAAMX,SAAWpB,EAAEoB,OACnB,aAAaW,EAAMnB,KAAI,6BAA6BmB,EAAMX,QAI9DqI,EAAKE,IAAItD,GAAKrG,EAxBhByJ,EAAKG,QAAQ5H,KAAKD,EAAMnB,MA2BxBxB,OAAOkL,eAAeb,EAAM1H,EAAMnB,KAAM,CACtCvB,YAAY,EACZkL,cAAc,EACdjL,IAAK4K,EACLM,IAAKL,IAGHpI,EAAM0I,UACRhB,EAAK1H,EAAMnB,MAAQmB,EAAM0I,SAIvB1I,EAAM2I,OACRtL,OAAOkL,eAAeb,EAAM1H,EAAM2I,MAAO,CACvCrL,YAAY,EACZkL,cAAc,EACdC,IAAKL,EACL7K,IAAK4K,OAMPlO,EASF,GARoB,kBAATA,IACTA,EAAOmC,EAAOC,KAAKsH,EAAUM,eAAehK,GAAO,QAGjDmC,EAAO2J,SAAS9L,KAClBA,EAAOsN,EAAIqB,OAAO3O,IAGhBuG,MAAMwF,QAAQ/L,GAAO,CACvB,GAAIA,EAAKoF,OAASqI,EAAKG,QAAQxI,OAC7B,MAAM,IAAIjF,MAAM,kCAIlBH,EAAKgO,SAAQ,SAACY,EAAGvE,GACfoD,EAAKA,EAAKG,QAAQvD,IAAMR,EAAAA,SAAS+E,UAE9B,IAAoB,kBAAT5O,EAOhB,MAAM,IAAIG,MAAM,gBANhB,IAAM0O,EAAOzL,OAAOmB,KAAKvE,GACzB0N,EAAOM,SAAQ,SAACjI,IACoB,IAA9B8I,EAAKC,QAAQ/I,EAAMnB,QAAc6I,EAAK1H,EAAMnB,MAAQ5E,EAAK+F,EAAMnB,QAChC,IAA/BiK,EAAKC,QAAQ/I,EAAM2I,SAAejB,EAAK1H,EAAM2I,OAAS1O,EAAK+F,EAAM2I,c,4eC9G7E,IAAM/E,EAAYF,EAAQ,OACpBsF,EAActF,EAAQ,OACtBuF,EAAMvF,EAAQ,OA8BPnH,EAAAA,iBAAmB,SAASd,GAEvC,OAA0B,KAAtBA,EAAW4D,QAIRuE,EAAUuB,iBAAiB+D,WAAW7M,KAAKZ,KAUvCc,EAAAA,iBAAmB,SAASd,EAAoB0N,GAE3D,GAA0B,KAAtB1N,EAAW4D,OACb,MAAM,IAAI+J,WAAW,iCAGvB,IAAMpP,EAAYgP,EAAYK,iBAAiB5N,EAAY0N,GAE3D,OAAOF,EAAII,iBAAiB5N,EAAYzB,EAAWmP,IASxC5M,EAAAA,iBAAmB,SAASd,GAIvC,GAAmB,QADnBA,EAAawN,EAAIK,iBAAiB7N,KACe,KAAtBA,EAAW4D,QAAiB9C,EAAAA,iBAAiBd,GACtE,OAAOA,EAGT,MAAM,IAAIrB,MAAM,oCASLmC,EAAAA,iBAAmB,SAASd,GACvC,OAAOW,EAAOC,KAAKuH,EAAU2F,iBAAiBL,WAAW7M,KAAKZ,MASnDc,EAAAA,qBAAuB,SAASd,GAC3C,GAA0B,KAAtBA,EAAW4D,OACb,MAAM,IAAIjF,MAAM,iCAGlB,OAAOgC,EAAOC,KAAK2M,EAAYQ,qBAAqBN,WAAW7M,KAAKZ,MAUzDc,EAAAA,mBAAqB,SAASd,EAAoBgO,GAC7D,OAAOrN,EAAOC,KAAKuH,EAAU8F,mBAAmBR,WAAW7M,KAAKZ,GAAagO,KAUlElN,EAAAA,mBAAqB,SAASd,EAAoBgO,GAC7D,OAAOrN,EAAOC,KACZuH,EAAU+F,mBAAmBT,WAAW7M,KAAKZ,GAAayN,WAAW7M,KAAKoN,MAWjElN,EAAAA,gBAAkB,SAASd,EAAoB0N,GAC1D,OAAO/M,EAAOC,KAAKuH,EAAU4B,gBAAgB0D,WAAW7M,KAAKZ,GAAa0N,KAU/D5M,EAAAA,iBAAmB,SAASvC,EAAmBmP,GAC1D,OAAO/M,EAAOC,KAAKuH,EAAU2B,iBAAiB2D,WAAW7M,KAAKrC,GAAYmP,KAS/D5M,EAAAA,gBAAkB,SAASvC,GAEtC,OAAyB,KAArBA,EAAUqF,QAAsC,KAArBrF,EAAUqF,SAIlCuE,EAAUyB,gBAAgB6D,WAAW7M,KAAKrC,KAWtCuC,EAAAA,kBAAoB,SAC/BvC,EACAyP,EACAN,GAEA,OAAO/M,EAAOC,KACZuH,EAAUgG,kBAAkBV,WAAW7M,KAAKrC,GAAYkP,WAAW7M,KAAKoN,GAAQN,KAYvE5M,EAAAA,kBAAoB,SAC/BvC,EACAyP,EACAN,GAEA,OAAO/M,EAAOC,KACZuH,EAAUiG,kBAAkBX,WAAW7M,KAAKrC,GAAYkP,WAAW7M,KAAKoN,GAAQN,KAWvE5M,EAAAA,iBAAmB,SAASuN,EAAsBX,GAC7D,IAAM3K,EAAqB,GAK3B,OAJAsL,EAAW7B,SAAQ,SAACjO,GAClBwE,EAAKyB,KAAKiJ,WAAW7M,KAAKrC,OAGrBoC,EAAOC,KAAKuH,EAAUmG,iBAAiBvL,EAAM2K,KASzC5M,EAAAA,mBAAqB,SAASqB,GACzC,OAAOxB,EAAOC,KAAKuH,EAAUoG,mBAAmBd,WAAW7M,KAAKuB,MASrDrB,EAAAA,gBAAkB,SAASqB,GACtC,OAAOxB,EAAOC,KAAKuH,EAAUqG,gBAAgBf,WAAW7M,KAAKuB,MASlDrB,EAAAA,gBAAkB,SAASqB,GACtC,OAAOxB,EAAOC,KAAKuH,EAAUsG,gBAAgBhB,WAAW7M,KAAKuB,MASlDrB,EAAAA,mBAAqB,SAASqB,GAIzC,GAAyB,IAArBA,EAAUyB,OACZ,MAAM,IAAI+J,WAAW,+BAGvB,IAAMe,EAASlB,EAAImB,mBAAmBxM,GACtC,GAAe,OAAXuM,EACF,MAAM,IAAI/P,MAAM,gCAGlB,OAAO4O,EAAYkB,gBAAgBC,IAWxB5N,EAAAA,KAAO,SAClBoB,EACAlC,EACA4O,GAEA,GAAgB,OAAZA,EACF,MAAM,IAAIC,UAAU,+BAGtB,IAAIC,OAAyCrL,EAE7C,GAAImL,EAAS,CAGX,GAFAE,EAAc,GAEO,OAAjBF,EAAQpQ,KAEV,MAAM,IAAIqQ,UAAU,mCAGtB,GAAID,EAAQpQ,KAAM,CAChB,GAA2B,IAAvBoQ,EAAQpQ,KAAKoF,OACf,MAAM,IAAI+J,WAAW,kCAGvBmB,EAAYtQ,KAAO,IAAIiP,WAAWmB,EAAQpQ,MAG5C,GAAwB,OAApBoQ,EAAQG,QACV,MAAM,IAAIF,UAAU,wCAGlBD,EAAQG,UAEVD,EAAYC,QAAU,SACpB7M,EACAlC,EACAgP,EACAxQ,EACAyQ,GAEA,IAAMC,EAAoC,MAARF,EAAerO,EAAOC,KAAKoO,GAAQ,KAC/DG,EAAoC,MAAR3Q,EAAemC,EAAOC,KAAKpC,GAAQ,KAEjEqJ,EAAiBlH,EAAOC,KAAK,IAYjC,OAVIgO,EAAQG,UACVlH,EAAS+G,EAAQG,QACfpO,EAAOC,KAAKsB,GACZvB,EAAOC,KAAKZ,GACZkP,EACAC,EACAF,IAIG,IAAIxB,WAAW5F,KAK5B,IAAMtF,EAAM4F,EAAUiH,UACpB3B,WAAW7M,KAAKsB,GAChBuL,WAAW7M,KAAKZ,GAChB8O,GAGF,MAAO,CACL3M,UAAWxB,EAAOC,KAAK2B,EAAIJ,WAC3BkN,SAAU9M,EAAI+M,QAYLxO,EAAAA,OAAS,SAASoB,EAAiBC,EAAmB5D,GACjE,OAAO4J,EAAUoH,YAAY9B,WAAW7M,KAAKuB,GAAYsL,WAAW7M,KAAKsB,GAAU3D,IAYxEuC,EAAAA,QAAU,SACrBoB,EACAC,EACAmN,EACA5B,GAEA,OAAO/M,EAAOC,KACZuH,EAAUqH,aAAa/B,WAAW7M,KAAKuB,GAAYmN,EAAO7B,WAAW7M,KAAKsB,GAAUwL,KAW3E5M,EAAAA,KAAO,SAASvC,EAAmByB,GAE9C,OAAOW,EAAOC,KAAKuH,EAAUsH,KAAKhC,WAAW7M,KAAKrC,GAAYkP,WAAW7M,KAAKZ,GAAa,MAGhFc,EAAAA,WAAa,SACxBvC,EACAyB,EACA0N,GAKA,GAAyB,KAArBnP,EAAUqF,QAAsC,KAArBrF,EAAUqF,OACvC,MAAM,IAAI+J,WAAW,gCAIvB,GAA0B,KAAtB3N,EAAW4D,OACb,MAAM,IAAI+J,WAAW,iCAGvB,OAAOhN,EAAOC,KACZ2M,EAAYmC,WAAWjC,WAAW7M,KAAKrC,GAAYkP,WAAW7M,KAAKZ,GAAa0N,M,0GClZpF,IAAMiC,EAAmChP,EAAOC,KAAK,CAEnD,GACA,IACA,IACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGIgP,EAAqCjP,EAAOC,KAAK,CAErD,GACA,IACA,EACA,GACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EA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A,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGIgP,EAAqCjP,EAAOC,KAAK,CAErD,GACA,IACA,EACA,GACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,I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","sources":["../node_modules/@metamask/eth-sig-util/src/encryption.ts","../node_modules/@metamask/eth-sig-util/src/index.ts","../node_modules/@metamask/eth-sig-util/src/personal-sign.ts","../node_modules/@metamask/eth-sig-util/src/sign-typed-data.ts","../node_modules/@metamask/eth-sig-util/src/utils.ts","../../src/account.ts","../../src/bytes.ts","../../src/constants.ts","../../src/hash.ts","../../src/index.ts","../../src/object.ts","../../src/secp256k1v3-adapter.ts","../../../src/secp256k1v3-lib/der.ts","../../../src/secp256k1v3-lib/index.ts","../../src/signature.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/walletMidddleware.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/ethRpcMiddlewares.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/jrpcClient.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/walletConnectUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/WalletConnectProvider.ts","../node_modules/@web3auth/ethereum-provider/src/providers/converter.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/ethPrivatekeyUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/constants.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/index.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts","../node_modules/ethereumjs-abi/index.js","../node_modules/ethereumjs-abi/lib/index.js","../node_modules/ethjs-util/lib/index.js","../node_modules/jsonschema/lib/attribute.js","../node_modules/jsonschema/lib/helpers.js","../node_modules/jsonschema/lib/index.js","../node_modules/jsonschema/lib/scan.js","../node_modules/jsonschema/lib/validator.js","../node_modules/tweetnacl-util/nacl-util.js"],"sourcesContent":["import * as nacl from 'tweetnacl';\nimport * as naclUtil from 'tweetnacl-util';\n\nimport { isNullish } from './utils';\n\nexport interface EthEncryptedData {\n  version: string;\n  nonce: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n}\n\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encrypt({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305': {\n      if (typeof data !== 'string') {\n        throw new Error('Message data must be given as a string');\n      }\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n      } catch (err) {\n        throw new Error('Bad public key');\n      }\n\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey,\n      );\n\n      // handle encrypted data\n      const output = {\n        version: 'x25519-xsalsa20-poly1305',\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encryptSafely({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  const DEFAULT_PADDING_LENGTH = 2 ** 11;\n  const NACL_EXTRA_BYTES = 16;\n\n  if (typeof data === 'object' && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error(\n      'Cannot encrypt with toJSON property.  Please remove toJSON property',\n    );\n  }\n\n  // add padding\n  const dataWithPadding = {\n    data,\n    padding: '',\n  };\n\n  // calculate padding\n  const dataLength = Buffer.byteLength(\n    JSON.stringify(dataWithPadding),\n    'utf-8',\n  );\n  const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  let padLength = 0;\n  // Only pad if necessary\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n  dataWithPadding.padding = '0'.repeat(padLength);\n\n  const paddedMessage = JSON.stringify(dataWithPadding);\n  return encrypt({ publicKey, data: paddedMessage, version });\n}\n\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decrypt({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305': {\n      // string to buffer to UInt8Array\n      const recieverPrivateKeyUint8Array = nacl_decodeHex(privateKey);\n      const recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(\n        recieverPrivateKeyUint8Array,\n      ).secretKey;\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey,\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        recieverEncryptionPrivateKey,\n      );\n\n      // return decrypted msg data\n      let output;\n      try {\n        output = naclUtil.encodeUTF8(decryptedMessage);\n      } catch (err) {\n        throw new Error('Decryption failed.');\n      }\n\n      if (output) {\n        return output;\n      }\n      throw new Error('Decryption failed.');\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decryptSafely({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n  return dataWithPadding.data;\n}\n\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nexport function getEncryptionPublicKey(privateKey: string): string {\n  const privateKeyUint8Array = nacl_decodeHex(privateKey);\n  const encryptionPublicKey =\n    nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction nacl_decodeHex(msgHex: string): Uint8Array {\n  const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}\n","export * from './personal-sign';\nexport * from './sign-typed-data';\nexport * from './encryption';\nexport { concatSig, normalize } from './utils';\n","import {\n  bufferToHex,\n  ecsign,\n  hashPersonalMessage,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function personalSign({\n  privateKey,\n  data,\n}: {\n  privateKey: Buffer;\n  data: unknown;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const message = legacyToBuffer(data);\n  const msgHash = hashPersonalMessage(message);\n  const sig = ecsign(msgHash, privateKey);\n  const serialized = concatSig(toBuffer(sig.v), sig.r, sig.s);\n  return serialized;\n}\n\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nexport function recoverPersonalSignature({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  const sender = publicToAddress(publicKey);\n  const senderHex = bufferToHex(sender);\n  return senderHex;\n}\n\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nexport function extractPublicKey({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  return `0x${publicKey.toString('hex')}`;\n}\n\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(message: unknown, signature: string): Buffer {\n  const messageHash = hashPersonalMessage(legacyToBuffer(message));\n  return recoverPublicKey(messageHash, signature);\n}\n","import {\n  bufferToHex,\n  ecsign,\n  keccak,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\nimport { rawEncode, soliditySHA3 } from 'ethereumjs-abi';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * This is the message format used for `V1` of `signTypedData`.\n */\nexport type TypedDataV1 = TypedDataV1Field[];\n\n/**\n * This represents a single field in a `V1` `signTypedData` message.\n *\n * @property name - The name of the field.\n * @property type - The type of a field (must be a supported Solidity type).\n * @property value - The value of the field.\n */\nexport interface TypedDataV1Field {\n  name: string;\n  type: string;\n  value: any;\n}\n\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nexport enum SignTypedDataVersion {\n  V1 = 'V1',\n  V3 = 'V3',\n  V4 = 'V4',\n}\n\nexport interface MessageTypeProperty {\n  name: string;\n  type: string;\n}\n\nexport interface MessageTypes {\n  EIP712Domain: MessageTypeProperty[];\n  [additionalProperties: string]: MessageTypeProperty[];\n}\n\n/**\n * This is the message format used for `signTypeData`, for all versions\n * except `V1`.\n *\n * @template T - The custom types used by this message.\n * @property types - The custom types used by this message.\n * @property primaryType - The type of the message.\n * @property domain - Signing domain metadata. The signing domain is the intended context for the\n * signature (e.g. the dapp, protocol, etc. that it's intended for). This data is used to\n * construct the domain seperator of the message.\n * @property domain.name - The name of the signing domain.\n * @property domain.version - The current major version of the signing domain.\n * @property domain.chainId - The chain ID of the signing domain.\n * @property domain.verifyingContract - The address of the contract that can verify the signature.\n * @property domain.salt - A disambiguating salt for the protocol.\n * @property message - The message to be signed.\n */\nexport interface TypedMessage<T extends MessageTypes> {\n  types: T;\n  primaryType: keyof T;\n  domain: {\n    name?: string;\n    version?: string;\n    chainId?: number;\n    verifyingContract?: string;\n    salt?: ArrayBuffer;\n  };\n  message: Record<string, unknown>;\n}\n\nexport const TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string' },\n            type: { type: 'string' },\n          },\n          required: ['name', 'type'],\n        },\n      },\n    },\n    primaryType: { type: 'string' },\n    domain: { type: 'object' },\n    message: { type: 'object' },\n  },\n  required: ['types', 'primaryType', 'domain', 'message'],\n};\n\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(\n  version: SignTypedDataVersion,\n  allowedVersions?: SignTypedDataVersion[],\n) {\n  if (!Object.keys(SignTypedDataVersion).includes(version)) {\n    throw new Error(`Invalid version: '${version}'`);\n  } else if (allowedVersions && !allowedVersions.includes(version)) {\n    throw new Error(\n      `SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(\n        ', ',\n      )}`,\n    );\n  }\n}\n\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(\n  types: Record<string, MessageTypeProperty[]>,\n  name: string,\n  type: string,\n  value: any,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): [type: string, value: any] {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  if (types[type] !== undefined) {\n    return [\n      'bytes32',\n      version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n        ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n        : keccak(encodeData(type, value, types, version)),\n    ];\n  }\n\n  if (value === undefined) {\n    throw new Error(`missing value for field ${name} of type ${type}`);\n  }\n\n  if (type === 'bytes') {\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type === 'string') {\n    // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n    if (typeof value === 'string') {\n      value = Buffer.from(value, 'utf8');\n    }\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    if (version === SignTypedDataVersion.V3) {\n      throw new Error(\n        'Arrays are unimplemented in encodeData; use V4 extension',\n      );\n    }\n    const parsedType = type.slice(0, type.lastIndexOf('['));\n    const typeValuePairs = value.map((item) =>\n      encodeField(types, name, parsedType, item, version),\n    );\n    return [\n      'bytes32',\n      keccak(\n        rawEncode(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ];\n  }\n\n  return [type, value];\n}\n\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encodedTypes = ['bytes32'];\n  const encodedValues: unknown[] = [hashType(primaryType, types)];\n\n  for (const field of types[primaryType]) {\n    if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n      continue;\n    }\n    const [type, value] = encodeField(\n      types,\n      field.name,\n      field.type,\n      data[field.name],\n      version,\n    );\n    encodedTypes.push(type);\n    encodedValues.push(value);\n  }\n\n  return rawEncode(encodedTypes, encodedValues);\n}\n\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): string {\n  let result = '';\n  const unsortedDeps = findTypeDependencies(primaryType, types);\n  unsortedDeps.delete(primaryType);\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n  for (const type of deps) {\n    const children = types[type];\n    if (!children) {\n      throw new Error(`No type definition specified: ${type}`);\n    }\n\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`;\n  }\n\n  return result;\n}\n\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n  results: Set<string> = new Set(),\n): Set<string> {\n  [primaryType] = primaryType.match(/^\\w*/u);\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results;\n  }\n\n  results.add(primaryType);\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies(field.type, types, results);\n  }\n  return results;\n}\n\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  return keccak(encodeData(primaryType, data, types, version));\n}\n\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): Buffer {\n  return keccak(encodeType(primaryType, types));\n}\n\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData<T extends MessageTypes>(\n  data: TypedMessage<T>,\n): TypedMessage<T> {\n  const sanitizedData: Partial<TypedMessage<T>> = {};\n  for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n    if (data[key]) {\n      sanitizedData[key] = data[key];\n    }\n  }\n\n  if ('types' in sanitizedData) {\n    sanitizedData.types = { EIP712Domain: [], ...sanitizedData.types };\n  }\n  return sanitizedData as Required<TypedMessage<T>>;\n}\n\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const parts = [Buffer.from('1901', 'hex')];\n  parts.push(\n    hashStruct(\n      'EIP712Domain',\n      sanitizedData.domain,\n      sanitizedData.types,\n      version,\n    ),\n  );\n\n  if (sanitizedData.primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType as string,\n        sanitizedData.message,\n        sanitizedData.types,\n        version,\n      ),\n    );\n  }\n  return keccak(Buffer.concat(parts));\n}\n\n/**\n * A collection of utility functions used for signing typed data.\n */\nexport const TypedDataUtils = {\n  encodeData,\n  encodeType,\n  findTypeDependencies,\n  hashStruct,\n  hashType,\n  sanitizeData,\n  eip712Hash,\n};\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nexport function typedSignatureHash(typedData: TypedDataV1Field[]): string {\n  const hashBuffer = _typedSignatureHash(typedData);\n  return bufferToHex(hashBuffer);\n}\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData: TypedDataV1): Buffer {\n  const error = new Error('Expect argument to be non-empty array');\n  if (\n    typeof typedData !== 'object' ||\n    !('length' in typedData) ||\n    !typedData.length\n  ) {\n    throw error;\n  }\n\n  const data = typedData.map(function (e) {\n    if (e.type !== 'bytes') {\n      return e.value;\n    }\n\n    return legacyToBuffer(e.value);\n  });\n  const types = typedData.map(function (e) {\n    return e.type;\n  });\n  const schema = typedData.map(function (e) {\n    if (!e.name) {\n      throw error;\n    }\n    return `${e.type} ${e.name}`;\n  });\n\n  return soliditySHA3(\n    ['bytes32', 'bytes32'],\n    [\n      soliditySHA3(new Array(typedData.length).fill('string'), schema),\n      soliditySHA3(types, data),\n    ],\n  );\n}\n\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function signTypedData<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  privateKey,\n  data,\n  version,\n}: {\n  privateKey: Buffer;\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing private key parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const sig = ecsign(messageHash, privateKey);\n  return concatSig(toBuffer(sig.v), sig.r, sig.s);\n}\n\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nexport function recoverTypedSignature<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  data,\n  signature,\n  version,\n}: {\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  signature: string;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const publicKey = recoverPublicKey(messageHash, signature);\n  const sender = publicToAddress(publicKey);\n  return bufferToHex(sender);\n}\n","import {\n  addHexPrefix,\n  bufferToHex,\n  bufferToInt,\n  ecrecover,\n  fromRpcSig,\n  fromSigned,\n  toBuffer,\n  toUnsigned,\n} from 'ethereumjs-util';\nimport { intToHex, isHexString, stripHexPrefix } from 'ethjs-util';\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\n      `Expected an unprefixed hex string. Received: ${hexString}`,\n    );\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\n      `Expected a non-negative integer target length. Received: ${targetLength}`,\n    );\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, '0');\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: unknown) {\n  return typeof value === 'string' && !isHexString(value)\n    ? Buffer.from(value)\n    : toBuffer(value);\n}\n\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString('hex'), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString('hex'), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nexport function recoverPublicKey(\n  messageHash: Buffer,\n  signature: string,\n): Buffer {\n  const sigParams = fromRpcSig(signature);\n  return ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\n\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nexport function normalize(input: number | string): string {\n  if (!input) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    const buffer = toBuffer(input);\n    input = bufferToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += ` received ${typeof input}: ${input}`;\n    throw new Error(msg);\n  }\n\n  return addHexPrefix(input.toLowerCase());\n}\n",null,null,null,null,null,null,null,null,null,null,"import type { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { createAsyncMiddleware, createScaffoldMiddleware, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport type { MessageParams, TransactionParams, TypedMessageParams, WalletMiddlewareOptions } from \"./interfaces\";\n\nfunction resemblesAddress(str: string): boolean {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nexport function createWalletMiddleware({\n  getAccounts,\n  getPrivateKey,\n  processDecryptMessage,\n  processEncryptionPublicKey,\n  processEthSignMessage,\n  processPersonalMessage,\n  processTransaction,\n  processSignTransaction,\n  processTypedMessage,\n  processTypedMessageV3,\n  processTypedMessageV4,\n}: WalletMiddlewareOptions): JRPCMiddleware<string, unknown> {\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  }\n\n  //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n  async function validateAndNormalizeKeyholder(address: string, req: JRPCRequest<unknown>): Promise<string> {\n    if (typeof address === \"string\" && address.length > 0) {\n      // ensure address is included in provided accounts\n      const accounts: string[] = await getAccounts(req);\n      const normalizedAccounts: string[] = accounts.map((_address) => _address.toLowerCase());\n      const normalizedAddress: string = address.toLowerCase();\n\n      if (normalizedAccounts.includes(normalizedAddress)) {\n        return normalizedAddress;\n      }\n    }\n    throw ethErrors.rpc.invalidParams({\n      message: `Invalid parameters: must provide an Ethereum address.`,\n    });\n  }\n\n  //\n  // account lookups\n  //\n\n  async function lookupAccounts(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    res.result = await getAccounts(req);\n  }\n\n  async function lookupDefaultAccount(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const accounts = await getAccounts(req);\n    res.result = accounts[0] || null;\n  }\n\n  //\n  // transaction signatures\n  //\n\n  async function sendTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processTransaction(txParams, req);\n  }\n\n  async function signTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processSignTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processSignTransaction(txParams, req);\n  }\n\n  //\n  // message signatures\n  //\n\n  async function ethSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEthSignMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: string = (req.params as string[])[1];\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processEthSignMessage(msgParams, req);\n  }\n\n  async function signTypedData(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const message: TypedDataV1 = (req.params as TypedDataV1[])[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[1], req);\n    const version = \"V1\";\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<TypedDataV1> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processTypedMessage(msgParams, req, version);\n  }\n\n  async function signTypedDataV3(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV3) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V3\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV3(msgParams, req, version);\n  }\n\n  async function signTypedDataV4(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV4) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V4\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV4(msgParams, req, version);\n  }\n\n  async function personalSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processPersonalMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    // process normally\n    const firstParam: string = (req.params as string[])[0];\n    const secondParam: string = (req.params as string[])[1];\n    // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n\n    // We initially incorrectly ordered these parameters.\n    // To gracefully respect users who adopted this API early,\n    // we are currently gracefully recovering from the wrong param order\n    // when it is clearly identifiable.\n    //\n    // That means when the first param is definitely an address,\n    // and the second param is definitely not, but is hex.\n    let address: string, message: string;\n    if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n      let warning = `The eth_personalSign method requires params ordered `;\n      warning += `[message, address]. This was previously handled incorrectly, `;\n      warning += `and has been corrected automatically. `;\n      warning += `Please switch this param order for smooth behavior in the future.`;\n      (res as any).warning = warning;\n\n      address = firstParam;\n      message = secondParam;\n    } else {\n      message = firstParam;\n      address = secondParam;\n    }\n    address = await validateAndNormalizeKeyholder(address, req);\n\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    // eslint-disable-next-line require-atomic-updates\n    res.result = await processPersonalMessage(msgParams, req);\n  }\n\n  async function encryptionPublicKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEncryptionPublicKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[0], req);\n\n    res.result = await processEncryptionPublicKey(address, req);\n  }\n\n  async function decryptMessage(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processDecryptMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const ciphertext: string = (req.params as string)[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[1], req);\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: ciphertext,\n    };\n\n    res.result = processDecryptMessage(msgParams, req);\n  }\n\n  async function fetchPrivateKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!getPrivateKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n    res.result = getPrivateKey(req);\n  }\n\n  return createScaffoldMiddleware({\n    // account lookups\n    eth_accounts: createAsyncMiddleware(lookupAccounts),\n    eth_private_key: createAsyncMiddleware(fetchPrivateKey),\n    eth_coinbase: createAsyncMiddleware(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: createAsyncMiddleware(sendTransaction),\n    eth_signTransaction: createAsyncMiddleware(signTransaction),\n    // message signatures\n    eth_sign: createAsyncMiddleware(ethSign),\n    eth_signTypedData: createAsyncMiddleware(signTypedData),\n    eth_signTypedData_v3: createAsyncMiddleware(signTypedDataV3),\n    eth_signTypedData_v4: createAsyncMiddleware(signTypedDataV4),\n    personal_sign: createAsyncMiddleware(personalSign),\n    eth_getEncryptionPublicKey: createAsyncMiddleware(encryptionPublicKey),\n    eth_decrypt: createAsyncMiddleware(decryptMessage),\n  });\n}\n","import {\n  createAsyncMiddleware,\n  createScaffoldMiddleware,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers, IProviderHandlers } from \"./interfaces\";\nimport { createWalletMiddleware } from \"./walletMidddleware\";\n\nexport function createEthMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const {\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processSignTransaction,\n    processEthSignMessage,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage,\n  } = providerHandlers;\n  const ethMiddleware = mergeMiddleware([\n    createScaffoldMiddleware({\n      eth_syncing: false,\n    }),\n    createWalletMiddleware({\n      getAccounts,\n      getPrivateKey,\n      processTransaction,\n      processEthSignMessage,\n      processSignTransaction,\n      processTypedMessage,\n      processTypedMessageV3,\n      processTypedMessageV4,\n      processPersonalMessage,\n      processEncryptionPublicKey,\n      processDecryptMessage,\n    }),\n  ]);\n  return ethMiddleware;\n}\n\nexport function createChainSwitchMiddleware({ addChain, switchChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  async function addNewChain(req: JRPCRequest<AddEthereumChainParameter[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chain params\");\n    if (!chainParams.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n    if (!chainParams.rpcUrls || chainParams.rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n    if (!chainParams.nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n    res.result = await addChain(chainParams);\n  }\n  async function updateChain(req: JRPCRequest<{ chainId: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n    res.result = await switchChain(chainParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_addEthereumChain: createAsyncMiddleware(addNewChain),\n    wallet_switchEthereumChain: createAsyncMiddleware(updateChain),\n  });\n}\n\n// #region account middlewares\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  async function updateAccount(req: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const accountParams = req.params?.length ? req.params[0] : undefined;\n    if (!accountParams?.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n    res.result = await updatePrivatekey(accountParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_updateAccount: createAsyncMiddleware(updateAccount),\n  });\n}\n\n// #endregion account middlewares\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport type { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: CustomChainConfig): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<CustomChainConfig>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createJsonRpcClient(providerConfig: CustomChainConfig): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { chainId, rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector, ITxData } from \"@walletconnect/types\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\n\nexport function getProviderHandlers({ connector }: { connector: IConnector }): IProviderHandlers {\n  return {\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getAccounts: async (_: JRPCRequest<unknown>) => {\n      const { accounts } = connector;\n      if (accounts && accounts.length) {\n        return accounts;\n      }\n      throw new Error(\"Failed to get accounts\");\n    },\n    processTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.sendTransaction(txParams as ITxData);\n      return result;\n    },\n    processSignTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTransaction(txParams as ITxData);\n      return result;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signMessage([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signPersonalMessage([msgParams.data, msgParams.from]);\n      return result;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processEncryptionPublicKey: async (_: string): Promise<string> => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    processDecryptMessage: (_: MessageParams<string>): string => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n  };\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector } from \"@walletconnect/types\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, isHexStrict, log, WalletInitializationError, WalletLoginError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./walletConnectUtils\";\n\nexport interface WalletConnectProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface WalletConnectProviderState extends BaseProviderState {\n  accounts: string[];\n}\n\nexport class WalletConnectProvider extends BaseProvider<BaseProviderConfig, WalletConnectProviderState, IConnector> {\n  private connector: IConnector | null = null;\n\n  constructor({ config, state, connector }: { config: WalletConnectProviderConfig; state?: BaseProviderState; connector?: IConnector }) {\n    super({\n      config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 }, skipLookupNetwork: !!config.skipLookupNetwork },\n      state: { ...(state || {}), chainId: \"loading\", accounts: [] },\n    });\n    this.connector = connector || null;\n  }\n\n  public static getProviderInstance = async (params: {\n    connector: IConnector;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n    skipLookupNetwork: boolean;\n  }): Promise<WalletConnectProvider> => {\n    const providerFactory = new WalletConnectProvider({ config: { chainConfig: params.chainConfig, skipLookupNetwork: params.skipLookupNetwork } });\n    await providerFactory.setupProvider(params.connector);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    await this.setupProvider(this.connector);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(connector: IConnector): Promise<void> {\n    this.onConnectorStateUpdate(connector);\n    await this.setupEngine(connector);\n  }\n\n  public async switchChain({ chainId, addChain = true, lookup = true }: { chainId: string; addChain?: boolean; lookup?: boolean }): Promise<void> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    const currentChainConfig = this.getChainConfig(chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    const { rpcTarget, displayName } = currentChainConfig;\n    if (addChain) {\n      try {\n        await this.connector.sendCustomRequest({\n          method: \"wallet_addEthereumChain\",\n          params: [{ chainId, chainName: displayName, rpcUrls: [rpcTarget] }],\n        });\n      } catch (error) {\n        log.error(error);\n      }\n    }\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId }],\n      });\n    } catch (error) {\n      log.error(error);\n      // ignore this error because metamask & others return provider.result as null\n      // wallet connect thinks this is wrong\n      if (error.message !== \"JSON RPC response format is invalid\") {\n        throw error;\n      }\n    }\n\n    this.configure({ chainConfig: currentChainConfig });\n    if (lookup) await this.lookupNetwork(this.connector);\n  }\n\n  async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const { rpcTarget, displayName } = chainConfig;\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_addEthereumChain\",\n        params: [{ chainId: chainConfig.chainId, chainName: displayName, rpcUrls: [rpcTarget] }],\n      });\n      super.addChain(chainConfig);\n    } catch (error) {\n      log.error(error);\n      throw error;\n    }\n  }\n\n  protected async lookupNetwork(connector: IConnector): Promise<string> {\n    if (!connector.connected) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    const connectedHexChainId = isHexStrict(connector.chainId.toString()) ? connector.chainId : `0x${connector.chainId.toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.provider.emit(\"connect\", { chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return connectedHexChainId;\n  }\n\n  private async setupEngine(connector: IConnector): Promise<void> {\n    const providerHandlers = getProviderHandlers({ connector });\n    this.update({\n      accounts: connector.accounts || [],\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    if (!this.config.skipLookupNetwork) await this.lookupNetwork(connector);\n  }\n\n  private async onConnectorStateUpdate(connector: IConnector) {\n    connector.on(\"session_update\", async (error: Error | null, payload) => {\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n      if (error) {\n        this.provider.emit(\"error\", error);\n        return;\n      }\n      const { accounts, chainId: connectedChainId, rpcUrl }: { accounts?: string[]; chainId?: number; rpcUrl?: string } = payload.params[0];\n      // Check if accounts changed and trigger event\n      if (accounts?.length && this.state.accounts[0] !== accounts[0]) {\n        this.update({\n          accounts,\n        });\n        // await this.setupEngine(connector);\n        this.provider.emit(\"accountsChanged\", accounts);\n      }\n      const connectedHexChainId = `0x${connectedChainId.toString(16)}`;\n      // Check if chainId changed and trigger event\n      if (connectedChainId && this.state.chainId !== connectedHexChainId) {\n        const maybeConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, connectedChainId) || {};\n        // Handle rpcUrl update\n        this.configure({\n          chainConfig: { ...maybeConfig, chainId: connectedHexChainId, rpcTarget: rpcUrl, chainNamespace: CHAIN_NAMESPACES.EIP155 },\n        });\n        await this.setupEngine(connector);\n      }\n    });\n  }\n}\n","import BigNumber from \"bignumber.js\";\nimport { stripHexPrefix } from \"ethereumjs-util\";\n\ntype DenominationType = \"WEI\" | \"GWEI\" | \"ETH\";\ntype NumericBaseType = \"hex\" | \"dec\";\n\ntype ConverterInput = {\n  value: string | BigNumber;\n  fromNumericBase: NumericBaseType;\n  fromDenomination?: DenominationType;\n  toNumericBase?: NumericBaseType;\n  toDenomination?: DenominationType;\n  numberOfDecimals?: number;\n};\n// Big Number Constants\nconst BIG_NUMBER_WEI_MULTIPLIER = new BigNumber(\"1e18\");\nconst BIG_NUMBER_GWEI_MULTIPLIER = new BigNumber(\"1e9\");\nconst BIG_NUMBER_ETH_MULTIPLIER = new BigNumber(\"1\");\n\n// Setter Maps\nconst toBigNumber: Record<NumericBaseType, (n: string | BigNumber) => BigNumber> = {\n  hex: (n: string | BigNumber) => (typeof n === \"string\" ? new BigNumber(stripHexPrefix(n), 16) : new BigNumber(n, 16)),\n  dec: (n: string | BigNumber) => new BigNumber(n, 10),\n};\nconst toNormalizedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.div(BIG_NUMBER_WEI_MULTIPLIER),\n  GWEI: (bigNumber) => bigNumber.div(BIG_NUMBER_GWEI_MULTIPLIER),\n  ETH: (bigNumber) => bigNumber.div(BIG_NUMBER_ETH_MULTIPLIER),\n};\nconst toSpecifiedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.times(BIG_NUMBER_WEI_MULTIPLIER).dp(0, BigNumber.ROUND_HALF_UP),\n  GWEI: (bigNumber) => bigNumber.times(BIG_NUMBER_GWEI_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n  ETH: (bigNumber) => bigNumber.times(BIG_NUMBER_ETH_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n};\nconst baseChange: Record<string, (n: BigNumber) => string> = {\n  hex: (n) => n.toString(16),\n  dec: (n) => new BigNumber(n).toString(10),\n};\n\nconst converter = (params: ConverterInput): string | BigNumber => {\n  const { value, fromNumericBase, fromDenomination, toNumericBase, toDenomination, numberOfDecimals } = params;\n  let convertedValue: string | BigNumber = toBigNumber[fromNumericBase](value);\n\n  if (fromDenomination) {\n    convertedValue = toNormalizedDenomination[fromDenomination](convertedValue as BigNumber);\n  }\n\n  if (toDenomination) {\n    convertedValue = toSpecifiedDenomination[toDenomination](convertedValue as BigNumber);\n  }\n\n  if (numberOfDecimals) {\n    convertedValue = (convertedValue as BigNumber).dp(numberOfDecimals, BigNumber.ROUND_HALF_DOWN);\n  }\n\n  if (toNumericBase) {\n    convertedValue = baseChange[toNumericBase](convertedValue);\n  }\n  return convertedValue;\n};\n\nconst conversionUtil = (\n  value: string | BigNumber,\n  { fromNumericBase = \"hex\", toNumericBase, fromDenomination, toDenomination, numberOfDecimals }: Partial<ConverterInput>\n): BigNumber | string => {\n  return converter({\n    fromNumericBase,\n    toNumericBase,\n    fromDenomination,\n    toDenomination,\n    numberOfDecimals,\n    value: value || \"0\",\n  });\n};\n\nfunction decGWEIToHexWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"dec\",\n    toNumericBase: \"hex\",\n    fromDenomination: \"GWEI\",\n    toDenomination: \"WEI\",\n  }) as string;\n}\n\nfunction hexWEIToDecGWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"hex\",\n    toNumericBase: \"dec\",\n    fromDenomination: \"WEI\",\n    toDenomination: \"GWEI\",\n  }) as string;\n}\n\nexport { conversionUtil, decGWEIToHexWEI, hexWEIToDecGWEI };\n","import { SignTypedDataVersion, TYPED_MESSAGE_SCHEMA, TypedDataV1Field, typedSignatureHash } from \"@metamask/eth-sig-util\";\nimport { get } from \"@toruslabs/http-helpers\";\nimport { isHexStrict } from \"@web3auth/base\";\nimport assert from \"assert\";\nimport { BigNumber } from \"bignumber.js\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { isValidAddress } from \"ethereumjs-util\";\nimport jsonschema from \"jsonschema\";\n\nimport { TypedMessageParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { EIP1159GasData, LegacyGasData } from \"./interfaces\";\n\nexport function normalizeGWEIDecimalNumbers(n: string | BigNumber): string {\n  const numberAsWEIHex = decGWEIToHexWEI(n);\n  const numberAsGWEI = hexWEIToDecGWEI(numberAsWEIHex);\n  return numberAsGWEI;\n}\n\nexport async function fetchEip1159GasEstimates(url: string): Promise<EIP1159GasData> {\n  const estimates = await get<EIP1159GasData>(url);\n  const normalizedEstimates = {\n    ...estimates,\n    estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n    low: {\n      ...estimates.low,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxFeePerGas),\n    },\n    medium: {\n      ...estimates.medium,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxFeePerGas),\n    },\n    high: {\n      ...estimates.high,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxFeePerGas),\n    },\n  };\n  return normalizedEstimates;\n}\n\n/**\n * Hit the legacy MetaSwaps gasPrices estimate api and return the low, medium\n * high values from that API.\n */\nexport async function fetchLegacyGasPriceEstimates(url: string): Promise<LegacyGasData> {\n  const result = await get<{\n    SafeGasPrice: string;\n    ProposeGasPrice: string;\n    FastGasPrice: string;\n  }>(url, {\n    referrer: url,\n    referrerPolicy: \"no-referrer-when-downgrade\",\n    method: \"GET\",\n    mode: \"cors\",\n  });\n  return {\n    low: result.SafeGasPrice,\n    medium: result.ProposeGasPrice,\n    high: result.FastGasPrice,\n  };\n}\n\nexport const validateTypedMessageParams = (parameters: TypedMessageParams<unknown>, activeChainId: number) => {\n  try {\n    assert.ok(parameters && typeof parameters === \"object\", \"Params must be an object.\");\n    assert.ok(\"data\" in parameters, 'Params must include a \"data\" field.');\n    assert.ok(\"from\" in parameters, 'Params must include a \"from\" field.');\n    assert.ok(\n      typeof parameters.from === \"string\" && isValidAddress(parameters.from),\n      '\"from\" field must be a valid, lowercase, hexadecimal Ethereum address string.'\n    );\n    let data = null;\n    let chainId = null;\n    switch ((parameters as TypedMessageParams<unknown>).version) {\n      case SignTypedDataVersion.V1:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n        assert.ok(Array.isArray(data as unknown), \"params.data must be an array.\");\n        assert.doesNotThrow(() => {\n          typedSignatureHash(data as TypedDataV1Field[]);\n        }, \"Signing data must be valid EIP-712 typed data.\");\n        break;\n      case SignTypedDataVersion.V3:\n      case SignTypedDataVersion.V4:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n\n        assert.ok(data.primaryType in data.types, `Primary type of \"${data.primaryType}\" has no type definition.`);\n        const validation = jsonschema.validate(data, TYPED_MESSAGE_SCHEMA.properties);\n        assert.strictEqual(validation.errors.length, 0, \"Signing data must conform to EIP-712 schema. See https://git.io/fNtcx.\");\n        chainId = data.domain?.chainId;\n        if (chainId) {\n          assert.ok(!Number.isNaN(activeChainId), `Cannot sign messages for chainId \"${chainId}\", because Web3Auth is switching networks.`);\n          if (typeof chainId === \"string\") {\n            chainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n          }\n          assert.strictEqual(chainId, activeChainId, `Provided chainId \"${chainId}\" must match the active chainId \"${activeChainId}\"`);\n        }\n        break;\n      default:\n        assert.fail(`Unknown typed data version \"${(parameters as TypedMessageParams<unknown>).version}\"`);\n    }\n  } catch (error) {\n    throw ethErrors.rpc.invalidInput({\n      message: error?.message,\n    });\n  }\n};\n","import { TransactionFactory } from \"@ethereumjs/tx\";\nimport {\n  decrypt,\n  EthEncryptedData,\n  getEncryptionPublicKey,\n  MessageTypes,\n  personalSign,\n  signTypedData,\n  SignTypedDataVersion,\n  TypedDataV1,\n  TypedMessage,\n} from \"@metamask/eth-sig-util\";\nimport { SafeEventEmitterProvider, signMessage } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { isHexStrict, log } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { privateToAddress, stripHexPrefix } from \"ethereumjs-util\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\nimport { validateTypedMessageParams } from \"./TransactionFormatter/utils\";\n\nasync function signTx(txParams: TransactionParams & { gas?: string }, privKey: string, txFormatter: TransactionFormatter): Promise<Buffer> {\n  const finalTxParams = await txFormatter.formatTransaction(txParams);\n  const common = await txFormatter.getCommonConfiguration();\n  const unsignedEthTx = TransactionFactory.fromTxData(finalTxParams, {\n    common,\n  });\n  const signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n  return signedTx;\n}\n\nexport function getProviderHandlers({\n  txFormatter,\n  privKey,\n  getProviderEngineProxy,\n}: {\n  txFormatter: TransactionFormatter;\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): IProviderHandlers {\n  return {\n    getAccounts: async (_: JRPCRequest<unknown>) => [`0x${privateToAddress(Buffer.from(privKey, \"hex\")).toString(\"hex\")}`],\n    getPrivateKey: async (_: JRPCRequest<unknown>) => privKey,\n    processTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      const txHash = await providerEngineProxy.request<string[], string>({\n        method: \"eth_sendRawTransaction\",\n        params: [\"0x\".concat(signedTx.toString(\"hex\"))],\n      });\n      return txHash;\n    },\n    processSignTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      return `0x${signedTx.toString(\"hex\")}`;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const rawMessageSig = signMessage(privKey, msgParams.data);\n      return rawMessageSig;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = personalSign({ privateKey: privKeyBuffer, data: msgParams.data });\n      return sig;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessage\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      const params = {\n        ...msgParams,\n        version: SignTypedDataVersion.V1,\n      };\n      validateTypedMessageParams(params, finalChainId);\n      const data = typeof params.data === \"string\" ? JSON.parse(params.data) : params.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V1 });\n      return sig;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV3\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V3 });\n      return sig;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV4\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V4 });\n      return sig;\n    },\n    processEncryptionPublicKey: async (address: string, _: JRPCRequest<unknown>): Promise<string> => {\n      log.info(\"processEncryptionPublicKey\", address);\n      return getEncryptionPublicKey(privKey);\n    },\n    processDecryptMessage: (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): string => {\n      log.info(\"processDecryptMessage\", msgParams);\n      const stripped = stripHexPrefix(msgParams.data);\n      const buff = Buffer.from(stripped, \"hex\");\n      const decrypted = decrypt({ encryptedData: JSON.parse(buff.toString(\"utf8\")) as EthEncryptedData, privateKey: privKey });\n      return decrypted;\n    },\n  };\n}\n","import { BigNumber } from \"bignumber.js\";\nimport { addHexPrefix, BN, stripHexPrefix } from \"ethereumjs-util\";\n\nexport function bnLessThan(a, b) {\n  if (a === null || a === undefined || b === null || b === undefined) {\n    return null;\n  }\n  return new BigNumber(a, 10).lt(b, 10);\n}\n\nexport function bnToHex(inputBn: BN) {\n  return addHexPrefix(inputBn.toString(16));\n}\n\nexport function hexToBn(inputHex: string): BN {\n  if (BN.isBN(inputHex)) return inputHex;\n  return new BN(stripHexPrefix(inputHex), 16);\n}\n\nexport function BnMultiplyByFraction(targetBN: BN, numerator: number | string, denominator: number | string): BN {\n  const numberBN = new BN(numerator);\n  const denomBN = new BN(denominator);\n  return targetBN.mul(numberBN).div(denomBN);\n}\n","export const LegacyGasAPIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/gasPrices\";\nexport const EIP1559APIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/suggestedGasFees\";\nexport const TRANSACTION_ENVELOPE_TYPES = {\n  LEGACY: \"0x0\",\n  ACCESS_LIST: \"0x1\",\n  FEE_MARKET: \"0x2\",\n};\n\nexport const TRANSACTION_TYPES = {\n  SENT_ETHER: \"sentEther\",\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\",\n};\n\nexport const GAS_ESTIMATE_TYPES = {\n  FEE_MARKET: \"fee-market\",\n  LEGACY: \"legacy\",\n  ETH_GASPRICE: \"eth_gasPrice\",\n  NONE: \"none\",\n};\n","import Common, { Hardfork } from \"@ethereumjs/common\";\nimport { Block } from \"@toruslabs/base-controllers\";\nimport { CustomChainConfig, log, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { addHexPrefix, stripHexPrefix } from \"ethereumjs-util\";\n\nimport { TransactionParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { bnLessThan, BnMultiplyByFraction, bnToHex, hexToBn } from \"../../utils\";\nimport { EIP1559APIEndpoint, GAS_ESTIMATE_TYPES, LegacyGasAPIEndpoint, TRANSACTION_ENVELOPE_TYPES, TRANSACTION_TYPES } from \"./constants\";\nimport { EIP1159GasData, FallbackGasData, GasData, LegacyGasData, TxType } from \"./interfaces\";\nimport { fetchEip1159GasEstimates, fetchLegacyGasPriceEstimates } from \"./utils\";\n\nexport class TransactionFormatter {\n  private chainConfig: CustomChainConfig | null = null;\n\n  private getProviderEngineProxy: () => SafeEventEmitterProvider;\n\n  private isEIP1559Compatible = false;\n\n  constructor({ getProviderEngineProxy }: { getProviderEngineProxy: () => SafeEventEmitterProvider }) {\n    this.getProviderEngineProxy = getProviderEngineProxy;\n  }\n\n  get providerProxy() {\n    return this.getProviderEngineProxy();\n  }\n\n  async init(): Promise<void> {\n    this.chainConfig = (await this.providerProxy.request<CustomChainConfig>({ method: \"eth_provider_config\", params: [] })) as CustomChainConfig;\n    this.isEIP1559Compatible = await this.getEIP1559Compatibility();\n  }\n\n  async getCommonConfiguration(): Promise<Common> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const { displayName: name, chainId } = this.chainConfig;\n    const hardfork = this.isEIP1559Compatible ? Hardfork.London : Hardfork.Berlin;\n    const customChainParams = {\n      name,\n      chainId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      defaultHardfork: hardfork,\n    };\n    return Common.custom(customChainParams);\n  }\n\n  async formatTransaction(txParams: TransactionParams & { gas?: string }): Promise<TransactionParams & { gas?: string }> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n\n    const clonedTxParams = {\n      ...txParams,\n    };\n\n    if (clonedTxParams.nonce === undefined)\n      clonedTxParams.nonce = (await this.providerProxy.request<number>({\n        method: \"eth_getTransactionCount\",\n        params: [txParams.from, \"latest\"],\n      })) as number;\n\n    if (!this.isEIP1559Compatible && clonedTxParams.gasPrice) {\n      if (clonedTxParams.maxFeePerGas) delete clonedTxParams.maxFeePerGas;\n      if (clonedTxParams.maxPriorityFeePerGas) delete clonedTxParams.maxPriorityFeePerGas;\n      // if gas is not provided explicitly, estimate it.\n      if (!clonedTxParams.gas) {\n        const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n        if (defaultGasLimit) {\n          clonedTxParams.gasLimit = defaultGasLimit;\n        }\n      } else {\n        clonedTxParams.gasLimit = clonedTxParams.gas;\n      }\n      return clonedTxParams;\n    }\n\n    if (!clonedTxParams.gas) {\n      const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n      if (defaultGasLimit) {\n        clonedTxParams.gasLimit = defaultGasLimit;\n      }\n    } else {\n      clonedTxParams.gasLimit = clonedTxParams.gas;\n    }\n\n    const {\n      gasPrice: defaultGasPrice,\n      maxFeePerGas: defaultMaxFeePerGas,\n      maxPriorityFeePerGas: defaultMaxPriorityFeePerGas,\n    } = await this.getDefaultGasFees(clonedTxParams);\n\n    if (this.isEIP1559Compatible) {\n      // If the dapp has suggested a gas price, but no maxFeePerGas or maxPriorityFeePerGas\n      //  then we set maxFeePerGas and maxPriorityFeePerGas to the suggested gasPrice.\n      if (clonedTxParams.gasPrice && !clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n        clonedTxParams.maxFeePerGas = clonedTxParams.gasPrice;\n\n        clonedTxParams.maxPriorityFeePerGas = bnLessThan(\n          typeof defaultMaxPriorityFeePerGas === \"string\" ? stripHexPrefix(defaultMaxPriorityFeePerGas) : defaultMaxPriorityFeePerGas,\n          typeof clonedTxParams.gasPrice === \"string\" ? stripHexPrefix(clonedTxParams.gasPrice) : clonedTxParams.gasPrice\n        )\n          ? defaultMaxPriorityFeePerGas\n          : clonedTxParams.gasPrice;\n      } else {\n        if (defaultMaxFeePerGas && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, then we set maxFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxFeePerGas = defaultMaxFeePerGas;\n        }\n\n        if (defaultMaxPriorityFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, then we set maxPriorityFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxPriorityFeePerGas = defaultMaxPriorityFeePerGas;\n        }\n\n        if (defaultGasPrice && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, and no maxFeePerGas is available\n          // then we set maxFeePerGas to the defaultGasPrice, assuming it is\n          // available.\n          clonedTxParams.maxFeePerGas = defaultGasPrice;\n        }\n\n        if (clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, and no maxPriorityFeePerGas is\n          // available  then we set maxPriorityFeePerGas to\n          // clonedTxParams.maxFeePerGas, which will either be the gasPrice from the controller, the maxFeePerGas\n          // set by the dapp, or the maxFeePerGas from the controller.\n          clonedTxParams.maxPriorityFeePerGas = clonedTxParams.maxFeePerGas;\n        }\n      }\n\n      // We remove the gasPrice param entirely when on an eip1559 compatible network\n\n      delete clonedTxParams.gasPrice;\n    } else {\n      // We ensure that maxFeePerGas and maxPriorityFeePerGas are not in the transaction params\n      // when not on a EIP1559 compatible network\n\n      delete clonedTxParams.maxPriorityFeePerGas;\n      delete clonedTxParams.maxFeePerGas;\n    }\n\n    // If we have gotten to this point, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas are\n    // set on txParams, it means that either we are on a non-EIP1559 network and the dapp didn't suggest\n    // a gas price, or we are on an EIP1559 network, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas\n    // were available from either the dapp or the network.\n    if (defaultGasPrice && !clonedTxParams.gasPrice && !clonedTxParams.maxPriorityFeePerGas && !clonedTxParams.maxFeePerGas) {\n      clonedTxParams.gasPrice = defaultGasPrice as never;\n    }\n\n    clonedTxParams.type = this.isEIP1559Compatible ? TRANSACTION_ENVELOPE_TYPES.FEE_MARKET : TRANSACTION_ENVELOPE_TYPES.LEGACY;\n    clonedTxParams.chainId = this.chainConfig.chainId;\n    return clonedTxParams;\n  }\n\n  private async fetchEthGasPriceEstimate(): Promise<{ gasPrice: string }> {\n    const gasPrice = (await this.providerProxy.request<string>({ method: \"eth_gasPrice\", params: [] })) as string;\n    return {\n      gasPrice: hexWEIToDecGWEI(gasPrice).toString(),\n    };\n  }\n\n  private async getEIP1559Compatibility(): Promise<boolean> {\n    const latestBlock = await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] });\n    const supportsEIP1559 = latestBlock && latestBlock.baseFeePerGas !== undefined;\n\n    return !!supportsEIP1559;\n  }\n\n  private async fetchGasFeeEstimateData(): Promise<GasData> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const isLegacyGasAPICompatible = this.chainConfig.chainId === \"0x1\";\n\n    const chainId = Number.parseInt(this.chainConfig.chainId, 16);\n\n    let gasData: GasData;\n\n    try {\n      if (this.isEIP1559Compatible) {\n        // TODO: kovan is not working due to a bug in metamask api\n        const estimates = await fetchEip1159GasEstimates(EIP1559APIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.FEE_MARKET,\n        };\n      } else if (isLegacyGasAPICompatible) {\n        const estimates = await fetchLegacyGasPriceEstimates(LegacyGasAPIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.LEGACY,\n        };\n      } else {\n        throw new Error(\"Main gas fee/price estimation failed. Use fallback\");\n      }\n    } catch (e: unknown) {\n      try {\n        const estimates = await this.fetchEthGasPriceEstimate();\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.ETH_GASPRICE,\n        };\n      } catch (error: unknown) {\n        throw new Error(`Gas fee/price estimation failed. Message: ${(error as Error).message}`);\n      }\n    }\n    return gasData;\n  }\n\n  private async getDefaultGasFees(\n    txParams: TransactionParams & { gas?: string }\n  ): Promise<{ gasPrice?: string; maxFeePerGas?: string; maxPriorityFeePerGas?: string }> {\n    if ((!this.isEIP1559Compatible && txParams.gasPrice) || (this.isEIP1559Compatible && txParams.maxFeePerGas && txParams.maxPriorityFeePerGas)) {\n      return {};\n    }\n\n    try {\n      const { gasFeeEstimates, gasEstimateType } = await this.fetchGasFeeEstimateData();\n      if (this.isEIP1559Compatible && gasEstimateType === GAS_ESTIMATE_TYPES.FEE_MARKET) {\n        const { medium: { suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas } = {} } = gasFeeEstimates as EIP1159GasData;\n\n        if (suggestedMaxPriorityFeePerGas && suggestedMaxFeePerGas) {\n          return {\n            maxFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxFeePerGas)),\n            maxPriorityFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxPriorityFeePerGas)),\n          };\n        }\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.LEGACY) {\n        // The LEGACY type includes low, medium and high estimates of\n        // gas price values.\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as LegacyGasData).medium)),\n        };\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.ETH_GASPRICE) {\n        // The ETH_GASPRICE type just includes a single gas price property,\n        // which we can assume was retrieved from eth_gasPrice\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as FallbackGasData).gasPrice)),\n        };\n      }\n    } catch (error) {\n      log.error(error);\n    }\n\n    const { gasPrice } = await this.fetchEthGasPriceEstimate();\n\n    return { gasPrice: addHexPrefix(decGWEIToHexWEI(gasPrice)) };\n  }\n\n  private async estimateTxGas(txMeta: TransactionParams): Promise<string> {\n    const txParams = { ...txMeta };\n\n    // `eth_estimateGas` can fail if the user has insufficient balance for the\n    // value being sent, or for the gas cost. We don't want to check their\n    // balance here, we just want the gas estimate. The gas price is removed\n    // to skip those balance checks. We check balance elsewhere. We also delete\n    // maxFeePerGas and maxPriorityFeePerGas to support EIP-1559 txs.\n    delete txParams.gasPrice;\n    delete txParams.maxFeePerGas;\n    delete txParams.maxPriorityFeePerGas;\n    const gas = (await this.providerProxy.request<string>({ method: \"eth_estimateGas\", params: [txParams] })) as string;\n    return gas;\n  }\n\n  private async analyzeGasUsage(txMeta: TransactionParams): Promise<{\n    blockGasLimit: string;\n    estimatedGasHex: string;\n  }> {\n    const block = (await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] })) as Block;\n    // fallback to block gasLimit\n    const blockGasLimitBN = hexToBn(block.gasLimit as string);\n    const saferGasLimitBN = BnMultiplyByFraction(blockGasLimitBN, 19, 20);\n    let estimatedGasHex = bnToHex(saferGasLimitBN);\n\n    try {\n      estimatedGasHex = await this.estimateTxGas(txMeta);\n    } catch (error: unknown) {\n      log.warn(error);\n    }\n    return { blockGasLimit: block.gasLimit as string, estimatedGasHex };\n  }\n\n  private addGasBuffer(initialGasLimitHex: string, blockGasLimitHex: string, multiplier = 1.5): string {\n    const initialGasLimitBn = hexToBn(initialGasLimitHex);\n    const blockGasLimitBn = hexToBn(blockGasLimitHex);\n    const upperGasLimitBn = blockGasLimitBn.muln(0.9);\n    const bufferedGasLimitBn = initialGasLimitBn.muln(multiplier);\n\n    // if initialGasLimit is above blockGasLimit, dont modify it\n    if (initialGasLimitBn.gt(upperGasLimitBn)) return bnToHex(initialGasLimitBn);\n    // if bufferedGasLimit is below blockGasLimit, use bufferedGasLimit\n    if (bufferedGasLimitBn.lt(upperGasLimitBn)) return bnToHex(bufferedGasLimitBn);\n    // otherwise use blockGasLimit\n    return bnToHex(upperGasLimitBn);\n  }\n\n  private async determineTransactionCategory(txParameters: TransactionParams & { gas?: string }): Promise<{\n    transactionCategory: TxType | null;\n    code?: string;\n  }> {\n    const { data, to } = txParameters;\n    let code = \"\";\n\n    let txCategory: TxType | null;\n\n    if (data && !to) {\n      txCategory = TRANSACTION_TYPES.DEPLOY_CONTRACT;\n    } else {\n      try {\n        code = (await this.providerProxy.request<string>({ method: \"eth_getCode\", params: [to, \"latest\"] })) as string;\n      } catch (error) {\n        log.warn(error);\n      }\n      const codeIsEmpty = !code || code === \"0x\" || code === \"0x0\";\n\n      txCategory = codeIsEmpty ? TRANSACTION_TYPES.SENT_ETHER : TRANSACTION_TYPES.CONTRACT_INTERACTION;\n    }\n\n    return { transactionCategory: txCategory, code };\n  }\n\n  private async getDefaultGasLimit(txParams: TransactionParams & { gas?: string }): Promise<string> {\n    const { transactionCategory } = await this.determineTransactionCategory({ ...txParams });\n\n    if (txParams.gas) {\n      return txParams.gas;\n    }\n\n    if (txParams.to && transactionCategory === TRANSACTION_TYPES.SENT_ETHER) {\n      // if there's data in the params, but there's no contract code, it's not a valid transaction\n      if (txParams.data) {\n        throw Error(\"TxGasUtil - Trying to call a function on a non-contract address\");\n      }\n\n      const TWENTY_ONE_THOUSAND = 21_000;\n\n      // This is a standard ether simple send, gas requirement is exactly 21k\n      return addHexPrefix(TWENTY_ONE_THOUSAND.toString(16));\n    }\n\n    const { blockGasLimit, estimatedGasHex } = await this.analyzeGasUsage(txParams);\n\n    // add additional gas buffer to our estimation for safety\n    const gasLimit = this.addGasBuffer(addHexPrefix(estimatedGasHex), blockGasLimit as string);\n    return gasLimit;\n  }\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createAccountMiddleware, createChainSwitchMiddleware, createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers } from \"../../rpc/interfaces\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./ethPrivatekeyUtils\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\n\nexport interface EthereumPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface EthereumPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class EthereumPrivateKeyProvider extends BaseProvider<BaseProviderConfig, EthereumPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: EthereumPrivKeyProviderConfig; state?: EthereumPrivKeyProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<EthereumPrivateKeyProvider> => {\n    const providerFactory = new EthereumPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const txFormatter = new TransactionFormatter({\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const providerHandlers = getProviderHandlers({\n      txFormatter,\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new JRPCEngine();\n    // Not a partial anymore because of checks in ctor\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(this.getAccountMiddleware());\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await txFormatter.init();\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    if (!chainId) throw ethErrors.rpc.invalidParams(\"chainId is required while lookupNetwork\");\n    const network = await this._providerEngineProxy.request<string[], string>({\n      method: \"net_version\",\n      params: [],\n    });\n\n    if (parseInt(chainId, 16) !== parseInt(network, 10)) throw ethErrors.provider.chainDisconnected(`Invalid network, net_version is: ${network}`);\n    if (this.state.chainId !== chainId) {\n      this._providerEngineProxy.emit(\"chainChanged\", chainId);\n      this._providerEngineProxy.emit(\"connect\", { chainId });\n    }\n    this.update({ chainId });\n    return network;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addChain: async (params: AddEthereumChainParameter): Promise<void> => {\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = params;\n        this.addChain({\n          chainNamespace: \"eip155\",\n          chainId,\n          ticker: nativeCurrency?.symbol || \"ETH\",\n          tickerName: nativeCurrency?.name || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n        });\n      },\n      switchChain: async (params: { chainId: string }): Promise<void> => {\n        const { chainId } = params;\n        await this.switchChain({ chainId });\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (params: { privateKey: string }): Promise<void> => {\n        const { privateKey } = params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","module.exports = require('./lib/index.js')\n","/* eslint-disable no-useless-escape */\nconst utils = require('ethereumjs-util')\nconst BN = require('bn.js')\n\nvar ABI = function () {\n}\n\n// Convert from short to canonical names\n// FIXME: optimise or make this nicer?\nfunction elementaryName (name) {\n  if (name.startsWith('int[')) {\n    return 'int256' + name.slice(3)\n  } else if (name === 'int') {\n    return 'int256'\n  } else if (name.startsWith('uint[')) {\n    return 'uint256' + name.slice(4)\n  } else if (name === 'uint') {\n    return 'uint256'\n  } else if (name.startsWith('fixed[')) {\n    return 'fixed128x128' + name.slice(5)\n  } else if (name === 'fixed') {\n    return 'fixed128x128'\n  } else if (name.startsWith('ufixed[')) {\n    return 'ufixed128x128' + name.slice(6)\n  } else if (name === 'ufixed') {\n    return 'ufixed128x128'\n  }\n  return name\n}\n\nABI.eventID = function (name, types) {\n  // FIXME: use node.js util.format?\n  var sig = name + '(' + types.map(elementaryName).join(',') + ')'\n  return utils.keccak256(Buffer.from(sig))\n}\n\nABI.methodID = function (name, types) {\n  return ABI.eventID(name, types).slice(0, 4)\n}\n\n// Parse N from type<N>\nfunction parseTypeN (type) {\n  return parseInt(/^\\D+(\\d+)$/.exec(type)[1], 10)\n}\n\n// Parse N,M from type<N>x<M>\nfunction parseTypeNxM (type) {\n  var tmp = /^\\D+(\\d+)x(\\d+)$/.exec(type)\n  return [ parseInt(tmp[1], 10), parseInt(tmp[2], 10) ]\n}\n\n// Parse N in type[<N>] where \"type\" can itself be an array type.\nfunction parseTypeArray (type) {\n  var tmp = type.match(/(.*)\\[(.*?)\\]$/)\n  if (tmp) {\n    return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10)\n  }\n  return null\n}\n\nfunction parseNumber (arg) {\n  var type = typeof arg\n  if (type === 'string') {\n    if (utils.isHexPrefixed(arg)) {\n      return new BN(utils.stripHexPrefix(arg), 16)\n    } else {\n      return new BN(arg, 10)\n    }\n  } else if (type === 'number') {\n    return new BN(arg)\n  } else if (arg.toArray) {\n    // assume this is a BN for the moment, replace with BN.isBN soon\n    return arg\n  } else {\n    throw new Error('Argument is not a number')\n  }\n}\n\n// someMethod(bytes,uint)\n// someMethod(bytes,uint):(boolean)\nfunction parseSignature (sig) {\n  var tmp = /^(\\w+)\\((.*)\\)$/.exec(sig)\n\n  if (tmp.length !== 3) {\n    throw new Error('Invalid method signature')\n  }\n\n  var args = /^(.+)\\):\\((.+)$/.exec(tmp[2])\n\n  if (args !== null && args.length === 3) {\n    return {\n      method: tmp[1],\n      args: args[1].split(','),\n      retargs: args[2].split(',')\n    }\n  } else {\n    var params = tmp[2].split(',')\n    if (params.length === 1 && params[0] === '') {\n      // Special-case (possibly naive) fixup for functions that take no arguments.\n      // TODO: special cases are always bad, but this makes the function return\n      // match what the calling functions expect\n      params = []\n    }\n    return {\n      method: tmp[1],\n      args: params\n    }\n  }\n}\n\n// Encodes a single item (can be dynamic array)\n// @returns: Buffer\nfunction encodeSingle (type, arg) {\n  var size, num, ret, i\n\n  if (type === 'address') {\n    return encodeSingle('uint160', parseNumber(arg))\n  } else if (type === 'bool') {\n    return encodeSingle('uint8', arg ? 1 : 0)\n  } else if (type === 'string') {\n    return encodeSingle('bytes', Buffer.from(arg, 'utf8'))\n  } else if (isArray(type)) {\n    // this part handles fixed-length ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    if (typeof arg.length === 'undefined') {\n      throw new Error('Not an array?')\n    }\n    size = parseTypeArray(type)\n    if (size !== 'dynamic' && size !== 0 && arg.length > size) {\n      throw new Error('Elements exceed array size: ' + size)\n    }\n    ret = []\n    type = type.slice(0, type.lastIndexOf('['))\n    if (typeof arg === 'string') {\n      arg = JSON.parse(arg)\n    }\n    for (i in arg) {\n      ret.push(encodeSingle(type, arg[i]))\n    }\n    if (size === 'dynamic') {\n      var length = encodeSingle('uint256', arg.length)\n      ret.unshift(length)\n    }\n    return Buffer.concat(ret)\n  } else if (type === 'bytes') {\n    arg = Buffer.from(arg)\n\n    ret = Buffer.concat([ encodeSingle('uint256', arg.length), arg ])\n\n    if ((arg.length % 32) !== 0) {\n      ret = Buffer.concat([ ret, utils.zeros(32 - (arg.length % 32)) ])\n    }\n\n    return ret\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(arg, 32)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    if (num < 0) {\n      throw new Error('Supplied uint is negative')\n    }\n\n    return num.toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    return num.toTwos(256).toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('ufixed')) {\n    size = parseTypeNxM(type)\n\n    num = parseNumber(arg)\n\n    if (num < 0) {\n      throw new Error('Supplied ufixed is negative')\n    }\n\n    return encodeSingle('uint256', num.mul(new BN(2).pow(new BN(size[1]))))\n  } else if (type.startsWith('fixed')) {\n    size = parseTypeNxM(type)\n\n    return encodeSingle('int256', parseNumber(arg).mul(new BN(2).pow(new BN(size[1]))))\n  }\n\n  throw new Error('Unsupported or invalid type: ' + type)\n}\n\n// Decodes a single item (can be dynamic array)\n// @returns: array\n// FIXME: this method will need a lot of attention at checking limits and validation\nfunction decodeSingle (parsedType, data, offset) {\n  if (typeof parsedType === 'string') {\n    parsedType = parseType(parsedType)\n  }\n  var size, num, ret, i\n\n  if (parsedType.name === 'address') {\n    return decodeSingle(parsedType.rawType, data, offset).toArrayLike(Buffer, 'be', 20).toString('hex')\n  } else if (parsedType.name === 'bool') {\n    return decodeSingle(parsedType.rawType, data, offset).toString() === new BN(1).toString()\n  } else if (parsedType.name === 'string') {\n    var bytes = decodeSingle(parsedType.rawType, data, offset)\n    return Buffer.from(bytes, 'utf8').toString()\n  } else if (parsedType.isArray) {\n    // this part handles fixed-length arrays ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    ret = []\n    size = parsedType.size\n\n    if (parsedType.size === 'dynamic') {\n      offset = decodeSingle('uint256', data, offset).toNumber()\n      size = decodeSingle('uint256', data, offset).toNumber()\n      offset = offset + 32\n    }\n    for (i = 0; i < size; i++) {\n      var decoded = decodeSingle(parsedType.subArray, data, offset)\n      ret.push(decoded)\n      offset += parsedType.subArray.memoryUsage\n    }\n    return ret\n  } else if (parsedType.name === 'bytes') {\n    offset = decodeSingle('uint256', data, offset).toNumber()\n    size = decodeSingle('uint256', data, offset).toNumber()\n    return data.slice(offset + 32, offset + 32 + size)\n  } else if (parsedType.name.startsWith('bytes')) {\n    return data.slice(offset, offset + parsedType.size)\n  } else if (parsedType.name.startsWith('uint')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be')\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded int exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n    return num\n  } else if (parsedType.name.startsWith('int')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be').fromTwos(256)\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded uint exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n\n    return num\n  } else if (parsedType.name.startsWith('ufixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('uint256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  } else if (parsedType.name.startsWith('fixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('int256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  }\n  throw new Error('Unsupported or invalid type: ' + parsedType.name)\n}\n\n// Parse the given type\n// @returns: {} containing the type itself, memory usage and (including size and subArray if applicable)\nfunction parseType (type) {\n  var size\n  var ret\n  if (isArray(type)) {\n    size = parseTypeArray(type)\n    var subArray = type.slice(0, type.lastIndexOf('['))\n    subArray = parseType(subArray)\n    ret = {\n      isArray: true,\n      name: type,\n      size: size,\n      memoryUsage: size === 'dynamic' ? 32 : subArray.memoryUsage * size,\n      subArray: subArray\n    }\n    return ret\n  } else {\n    var rawType\n    switch (type) {\n      case 'address':\n        rawType = 'uint160'\n        break\n      case 'bool':\n        rawType = 'uint8'\n        break\n      case 'string':\n        rawType = 'bytes'\n        break\n    }\n    ret = {\n      rawType: rawType,\n      name: type,\n      memoryUsage: 32\n    }\n\n    if ((type.startsWith('bytes') && type !== 'bytes') || type.startsWith('uint') || type.startsWith('int')) {\n      ret.size = parseTypeN(type)\n    } else if (type.startsWith('ufixed') || type.startsWith('fixed')) {\n      ret.size = parseTypeNxM(type)\n    }\n\n    if (type.startsWith('bytes') && type !== 'bytes' && (ret.size < 1 || ret.size > 32)) {\n      throw new Error('Invalid bytes<N> width: ' + ret.size)\n    }\n    if ((type.startsWith('uint') || type.startsWith('int')) && (ret.size % 8 || ret.size < 8 || ret.size > 256)) {\n      throw new Error('Invalid int/uint<N> width: ' + ret.size)\n    }\n    return ret\n  }\n}\n\n// Is a type dynamic?\nfunction isDynamic (type) {\n  // FIXME: handle all types? I don't think anything is missing now\n  return (type === 'string') || (type === 'bytes') || (parseTypeArray(type) === 'dynamic')\n}\n\n// Is a type an array?\nfunction isArray (type) {\n  return type.lastIndexOf(']') === type.length - 1\n}\n\n// Encode a method/event with arguments\n// @types an array of string type names\n// @args  an array of the appropriate values\nABI.rawEncode = function (types, values) {\n  var output = []\n  var data = []\n\n  var headLength = 0\n\n  types.forEach(function (type) {\n    if (isArray(type)) {\n      var size = parseTypeArray(type)\n\n      if (size !== 'dynamic') {\n        headLength += 32 * size\n      } else {\n        headLength += 32\n      }\n    } else {\n      headLength += 32\n    }\n  })\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    var cur = encodeSingle(type, value)\n\n    // Use the head/tail method for storing dynamic data\n    if (isDynamic(type)) {\n      output.push(encodeSingle('uint256', headLength))\n      data.push(cur)\n      headLength += cur.length\n    } else {\n      output.push(cur)\n    }\n  }\n\n  return Buffer.concat(output.concat(data))\n}\n\nABI.rawDecode = function (types, data) {\n  var ret = []\n  data = Buffer.from(data)\n  var offset = 0\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var parsed = parseType(type, data, offset)\n    var decoded = decodeSingle(parsed, data, offset)\n    offset += parsed.memoryUsage\n    ret.push(decoded)\n  }\n  return ret\n}\n\nABI.simpleEncode = function (method) {\n  var args = Array.prototype.slice.call(arguments).slice(1)\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (args.length !== sig.args.length) {\n    throw new Error('Argument count mismatch')\n  }\n\n  return Buffer.concat([ ABI.methodID(sig.method, sig.args), ABI.rawEncode(sig.args, args) ])\n}\n\nABI.simpleDecode = function (method, data) {\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (!sig.retargs) {\n    throw new Error('No return values in method')\n  }\n\n  return ABI.rawDecode(sig.retargs, data)\n}\n\nfunction stringify (type, value) {\n  if (type.startsWith('address') || type.startsWith('bytes')) {\n    return '0x' + value.toString('hex')\n  } else {\n    return value.toString()\n  }\n}\n\nABI.stringify = function (types, values) {\n  var ret = []\n\n  for (var i in types) {\n    var type = types[i]\n    var value = values[i]\n\n    // if it is an array type, concat the items\n    if (/^[^\\[]+\\[.*\\]$/.test(type)) {\n      value = value.map(function (item) {\n        return stringify(type, item)\n      }).join(', ')\n    } else {\n      value = stringify(type, value)\n    }\n\n    ret.push(value)\n  }\n\n  return ret\n}\n\nABI.solidityHexValue = function (type, value, bitsize) {\n  // pass in bitsize = null if use default bitsize\n  var size, num\n  if (isArray(type)) {\n    var subType = type.replace(/\\[.*?\\]/, '')\n    if (!isArray(subType)) {\n      var arraySize = parseTypeArray(type)\n      if (arraySize !== 'dynamic' && arraySize !== 0 && value.length > arraySize) {\n        throw new Error('Elements exceed array size: ' + arraySize)\n      }\n    }\n    var arrayValues = value.map(function (v) {\n      return ABI.solidityHexValue(subType, v, 256)\n    })\n    return Buffer.concat(arrayValues)\n  } else if (type === 'bytes') {\n    return value\n  } else if (type === 'string') {\n    return Buffer.from(value, 'utf8')\n  } else if (type === 'bool') {\n    bitsize = bitsize || 8\n    var padding = Array((bitsize) / 4).join('0')\n    return Buffer.from(value ? padding + '1' : padding + '0', 'hex')\n  } else if (type === 'address') {\n    var bytesize = 20\n    if (bitsize) {\n      bytesize = bitsize / 8\n    }\n    return utils.setLengthLeft(value, bytesize)\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(value, size)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toArrayLike(Buffer, 'be', bitsize / 8)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toTwos(size).toArrayLike(Buffer, 'be', bitsize / 8)\n  } else {\n    // FIXME: support all other types\n    throw new Error('Unsupported or invalid type: ' + type)\n  }\n}\n\nABI.solidityPack = function (types, values) {\n  if (types.length !== values.length) {\n    throw new Error('Number of types are not matching the values')\n  }\n\n  var ret = []\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    ret.push(ABI.solidityHexValue(type, value, null))\n  }\n\n  return Buffer.concat(ret)\n}\n\nABI.soliditySHA3 = function (types, values) {\n  return utils.keccak256(ABI.solidityPack(types, values))\n}\n\nABI.soliditySHA256 = function (types, values) {\n  return utils.sha256(ABI.solidityPack(types, values))\n}\n\nABI.solidityRIPEMD160 = function (types, values) {\n  return utils.ripemd160(ABI.solidityPack(types, values), true)\n}\n\n// Serpent's users are familiar with this encoding\n// - s: string\n// - b: bytes\n// - b<N>: bytes<N>\n// - i: int256\n// - a: int256[]\n\nfunction isNumeric (c) {\n  // FIXME: is this correct? Seems to work\n  return (c >= '0') && (c <= '9')\n}\n\n// For a \"documentation\" refer to https://github.com/ethereum/serpent/blob/develop/preprocess.cpp\nABI.fromSerpent = function (sig) {\n  var ret = []\n  for (var i = 0; i < sig.length; i++) {\n    var type = sig[i]\n    if (type === 's') {\n      ret.push('bytes')\n    } else if (type === 'b') {\n      var tmp = 'bytes'\n      var j = i + 1\n      while ((j < sig.length) && isNumeric(sig[j])) {\n        tmp += sig[j] - '0'\n        j++\n      }\n      i = j - 1\n      ret.push(tmp)\n    } else if (type === 'i') {\n      ret.push('int256')\n    } else if (type === 'a') {\n      ret.push('int256[]')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret\n}\n\nABI.toSerpent = function (types) {\n  var ret = []\n  for (var i = 0; i < types.length; i++) {\n    var type = types[i]\n    if (type === 'bytes') {\n      ret.push('s')\n    } else if (type.startsWith('bytes')) {\n      ret.push('b' + parseTypeN(type))\n    } else if (type === 'int256') {\n      ret.push('i')\n    } else if (type === 'int256[]') {\n      ret.push('a')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret.join('')\n}\n\nmodule.exports = ABI\n","'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","\"use strict\";\n\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n","'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n"],"names":["encrypt","publicKey","data","version","utils_1","Error","pubKeyUInt8Array","ephemeralKeyPair","nacl","box","keyPair","naclUtil","decodeBase64","err","msgParamsUInt8Array","decodeUTF8","nonce","randomBytes","nonceLength","encryptedMessage","secretKey","encodeBase64","ephemPublicKey","ciphertext","decrypt","encryptedData","privateKey","output","recieverPrivateKeyUint8Array","nacl_decodeHex","recieverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","encodeUTF8","msgHex","msgBase64","Buffer","from","toString","exports","DEFAULT_PADDING_LENGTH","dataWithPadding","padding","modVal","byteLength","JSON","stringify","padLength","repeat","parse","privateKeyUint8Array","encryptionPublicKey","__exportStar","Object","enumerable","get","concatSig","normalize","getPublicKeyFor","message","signature","messageHash","ethereumjs_util_1","msgHash","sig","v","r","s","sender","SignTypedDataVersion","validateVersion","allowedVersions","keys","includes","join","encodeField","types","name","type","value","V3","V4","undefined","encodeData","lastIndexOf","length","parsedType","slice","typeValuePairs","map","item","ethereumjs_abi_1","primaryType","encodedTypes","encodedValues","hashType","field","push","encodeType","result","unsortedDeps","findTypeDependencies","delete","deps","Array","sort","t","results","Set","match","has","add","hashStruct","sanitizeData","sanitizedData","key","properties","EIP712Domain","_typedSignatureHash","typedData","error","e","schema","fill","additionalProperties","items","required","domain","eip712Hash","parts","concat","hashBuffer","V1","padWithZeroes","hexString","targetLength","test","String","prototype","padStart","call","ethjs_util_1","rSig","sSig","vSig","rStr","sStr","vStr","sigParams","input","buffer","msg","toLowerCase","assert","require","ethjsUtil","secp256k1","addr","bytes_1","address","eip1191ChainId","stripHexPrefix","prefix","hash","hash_1","ret","i","parseInt","toUpperCase","nonceBN","BN","isZero","toArray","salt","initCode","fromBuf","saltBuf","initCodeBuf","a","privateKeyVerify","sanitize","publicKeyVerify","pubKey","publicKeyConvert","publicKeyCreate","bytes","allocUnsafe","right","buf","copy","first","isBuffer","isArray","isHexString","padToEven","intToBuffer","isBN","toArrayLike","toNumber","num","fromTwos","toTwos","str","isHexPrefixed","ba","array","keccak224","keccak384","k256","keccak512","createHash","bits","update","digest","padded","rlp","encode","assign","self","fields","raw","_fields","toJSON","label","obj_1","forEach","serialize","getter","setter","allowZero","allowLess","defineProperty","configurable","set","default","alias","decode","d","keys_1","indexOf","secp256k1v3","der","Uint8Array","compressed","RangeError","privateKeyExport","privateKeyImport","privateKeyNegate","privateKeyModInverse","tweak","privateKeyTweakAdd","privateKeyTweakMul","publicKeyTweakAdd","publicKeyTweakMul","publicKeys","publicKeyCombine","signatureNormalize","signatureExport","signatureImport","sigObj","signatureImportLax","options","TypeError","signOptions","noncefn","algo","attempt","bufferAlgo","bufferData","ecdsaSign","recovery","recid","ecdsaVerify","ecdsaRecover","ecdh","ecdhUnsafe","EC_PRIVKEY_EXPORT_DER_COMPRESSED","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","index","lenb","len","alloc","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","ec","EC","ecparams","curve","ucmp","n","point","g","mul","toPublicKey","getX","getY","bn","invm","keyFromPublic","scalar","shared","pub","x","y","isOdd","calculateSigRecovery","chainId","isValidSigRecovery","sign","senderPubKey","recover","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","gt","cmp","resemblesAddress","createWalletMiddleware","_ref","getAccounts","getPrivateKey","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","validateAndNormalizeKeyholder","req","accounts","normalizedAccounts","_address","normalizedAddress","ethErrors","res","txParams","params","extraParams","msgParams","_objectSpread$5","firstParam","secondParam","warning","createScaffoldMiddleware","eth_accounts","createAsyncMiddleware","eth_private_key","eth_coinbase","eth_sendTransaction","eth_signTransaction","eth_sign","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","eth_getEncryptionPublicKey","eth_decrypt","createEthMiddleware","providerHandlers","mergeMiddleware","eth_syncing","createChainIdMiddleware","next","end","method","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","connector","_","sendTransaction","signTransaction","signMessage","signPersonalMessage","signTypedData","WalletConnectProvider","constructor","config","state","chainConfig","chainNamespace","CHAIN_NAMESPACES","skipLookupNetwork","_defineProperty","this","code","setupProvider","_providerEngineProxy","request","onConnectorStateUpdate","setupEngine","_ref2","addChain","lookup","currentChainConfig","getChainConfig","displayName","sendCustomRequest","chainName","rpcUrls","log","configure","lookupNetwork","WalletInitializationError","connected","WalletLoginError","provider","connectedHexChainId","isHexStrict","emit","getProviderHandlers","ethMiddleware","engine","JRPCEngine","providerFromEngine","updateProviderEngineProxy","on","payload","connectedChainId","rpcUrl","maybeConfig","BaseProvider","providerFactory","BIG_NUMBER_WEI_MULTIPLIER","BigNumber","BIG_NUMBER_GWEI_MULTIPLIER","BIG_NUMBER_ETH_MULTIPLIER","toBigNumber","hex","dec","toNormalizedDenomination","WEI","bigNumber","div","GWEI","ETH","toSpecifiedDenomination","times","dp","baseChange","conversionUtil","fromNumericBase","fromDenomination","toNumericBase","toDenomination","numberOfDecimals","convertedValue","converter","decGWEIToHexWEI","decGWEI","hexWEIToDecGWEI","normalizeGWEIDecimalNumbers","fetchEip1159GasEstimates","url","estimates","normalizedEstimates","_objectSpread$3","estimatedBaseFee","low","suggestedMaxPriorityFeePerGas","suggestedMaxFeePerGas","medium","high","fetchLegacyGasPriceEstimates","referrer","referrerPolicy","mode","SafeGasPrice","ProposeGasPrice","FastGasPrice","validateTypedMessageParams","parameters","activeChainId","isValidAddress","typedSignatureHash","validation","jsonschema","TYPED_MESSAGE_SCHEMA","errors","_data$domain","Number","isNaN","signTx","privKey","txFormatter","formatTransaction","finalTxParams","getCommonConfiguration","common","unsignedEthTx","TransactionFactory","signedTx","getProviderEngineProxy","privateToAddress","providerEngineProxy","txHash","rawMessageSig","privKeyBuffer","personalSign","finalChainId","_objectSpread$2","getEncryptionPublicKey","stripped","buff","bnToHex","inputBn","addHexPrefix","hexToBn","inputHex","BnMultiplyByFraction","targetBN","numerator","denominator","numberBN","denomBN","TRANSACTION_ENVELOPE_TYPES","TRANSACTION_TYPES","GAS_ESTIMATE_TYPES","TransactionFormatter","providerProxy","getEIP1559Compatibility","isEIP1559Compatible","hardfork","Hardfork","customChainParams","networkId","defaultHardfork","Common","clonedTxParams","gasPrice","maxFeePerGas","maxPriorityFeePerGas","gas","getDefaultGasLimit","defaultGasLimit","gasLimit","getDefaultGasFees","defaultGasPrice","defaultMaxFeePerGas","defaultMaxPriorityFeePerGas","b","lt","latestBlock","supportsEIP1559","baseFeePerGas","isLegacyGasAPICompatible","replace","gasData","gasFeeEstimates","gasEstimateType","fetchEthGasPriceEstimate","fetchGasFeeEstimateData","txMeta","_objectSpread","block","blockGasLimitBN","saferGasLimitBN","estimatedGasHex","estimateTxGas","blockGasLimit","addGasBuffer","initialGasLimitHex","blockGasLimitHex","multiplier","initialGasLimitBn","blockGasLimitBn","upperGasLimitBn","muln","bufferedGasLimitBn","txParameters","to","txCategory","transactionCategory","determineTransactionCategory","analyzeGasUsage","EthereumPrivateKeyProvider","bind","chainSwitchMiddleware","getChainSwitchMiddleware","getAccountMiddleware","init","network","chainSwitchHandlers","blockExplorerUrls","nativeCurrency","ticker","symbol","tickerName","blockExplorer","switchChain","chainParams","wallet_addEthereumChain","wallet_switchEthereumChain","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","updateAccount","accountParams","wallet_updateAccount","createAccountMiddleware","module","utils","ABI","elementaryName","startsWith","parseTypeN","exec","parseTypeNxM","tmp","parseTypeArray","parseNumber","arg","parseSignature","args","split","retargs","encodeSingle","size","unshift","zeros","setLengthRight","bitLength","pow","decodeSingle","offset","parseType","rawType","decoded","subArray","memoryUsage","mod","isDynamic","eventID","keccak256","methodID","rawEncode","values","headLength","cur","rawDecode","parsed","simpleEncode","arguments","simpleDecode","solidityHexValue","bitsize","subType","arraySize","arrayValues","bytesize","setLengthLeft","solidityPack","soliditySHA3","soliditySHA256","sha256","solidityRIPEMD160","ripemd160","fromSerpent","c","j","toSerpent","intToHex","arrayContainsArray","superset","subset","some","Boolean","getBinarySize","fromAscii","stringValue","charCodeAt","fromUtf8","toAscii","l","substring","substr","fromCharCode","toUtf8","getKeys","allowEmpty","helpers","ValidatorResult","SchemaError","attribute","validators","testSchemaNoThrow","instance","ctx","callback","throwError","throwAll","validateSchema","valid","Function","getEnumerableProperty","object","hasOwnProperty","getPrototypeOf","propertyIsEnumerable","testAdditionalProperty","property","addError","argument","preValidateProperty","makeChild","importErrors","testType","list","id","$id","anyOf","inner","title","nestedErrors","allOf","oneOf","count","filter","if","isSchema","ifValid","then","else","propertyNames","subschema","prop","patternProperties","pattern","regexp","RegExp","_e","minProperties","maxProperties","every","additionalItems","contains","minimum","number","exclusiveMinimum","maximum","exclusiveMaximum","validateMultipleOfOrDivisbleBy","validationType","errorMessage","validationArgument","instanceDecimals","getDecimalPlaces","divisorDecimals","maxDecimals","Math","max","round","testArrays","deepCompareStrict","multipleOf","divisibleBy","string","format","disableFormat","isFormat","minLength","hsp","maxLength","minItems","maxItems","uniqueItems","dependencies","dep","childContext","propertyPath","not","disallow","notTypes","schemaId","uri","ValidationError","path","reduce","sum","makeSuffix","stack","throwFirst","stringizer","ValidatorResultError","captureStackTrace","detail","validatorType","create","SchemaContext","base","schemas","resolve","target","propertyName","FORMAT_REGEXPS","parseFloat","regex","ipv4","validator","customFormats","deepMerger","dst","deepMerge","copyist","src","copyistWithDeepMerge","pathEncoder","encodeURIComponent","aKeys","bKeys","objectGetPath","o","k","shift","decodeURIComponent","encodePath","decimalPlaces","decimalParts","val","Validator","SchemaScanResult","scan","validate","urilib","found","ref","scanSchema","baseuri","$ref","resolvedUri","ourBase","scanArray","extends","scanObject","definitions","p","unresolvedRefs","attributes","shouldResolve","addSchema","ourUri","addSubSchemaArray","addSubSchema","addSubSchemaObject","setSchemas","getSchema","urn","sch","schemaobj","schemaTraverser","superResolve","switchSchema","resolved","subctx","skipAttributes","ignoreProperties","validatorErr","allowUnknownAttributes","rewrite","fragment","document","isFinite","integer","boolean","date","Date","any","root","f","util","validateBase64","unescape","arr","escape","atob","btoa"],"sourceRoot":""}